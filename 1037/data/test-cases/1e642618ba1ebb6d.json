{"uid":"1e642618ba1ebb6d","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"eb3f9b93c813293ad7432cf68068e97f","time":{"start":1704788315787,"stop":1704788323051,"duration":7264},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"6fed4db11c5aeeb9","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-FIREFOX-20240109-081841.flv","source":"6fed4db11c5aeeb9.flv","type":"video/x-flv","size":35729}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az1433-659"},{"name":"thread","value":"3454@fv-az1433-659.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@6652f2e8), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@97cb372, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=67f20900fd17, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=6045a523-4ee1-4abe-9624-83aa22d3e189, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-01-09T08:18:35.795335099Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=f852b149c4eca1d22e27adfe5b7b9f280f8a20c3d679ab391d83946c3304fe89, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@6907747f, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@497a9d23}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1/hostname, hostsPath=/var/lib/docker/containers/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1/hosts, logPath=/var/lib/docker/containers/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1-json.log, id=67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/reverent_golick, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=3b5607e0684055c3ff89db68a810ed47476d3405b145811730d5d98cb700c0d0, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@71f3537c, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7bd3cbf9}, sandboxKey=/var/run/docker/netns/3b5607e06840, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={8c9abc63-4f80-40d9-bb57-cb0906feecaf=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-DHWrpgBB, 67f20900fd17], networkID=f852b149c4eca1d22e27adfe5b7b9f280f8a20c3d679ab391d83946c3304fe89, endpointId=76f91d31e36d9c3464654f12b17e5fa1896f2eeebe2803ea636b1d63c99d4b73, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16770, exitCode=0, error=, startedAt=2024-01-09T08:18:36.016743142Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@29a5ec70, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@34abefe2)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":300,"unknown":0,"total":300},"items":[{"uid":"bbec0385d982429f","reportUrl":"https://javister.github.io/javister-docker-base/1034//#testresult/bbec0385d982429f","status":"passed","time":{"start":1703839939242,"stop":1703839946528,"duration":7286}},{"uid":"84649378485c2d9e","reportUrl":"https://javister.github.io/javister-docker-base/1032//#testresult/84649378485c2d9e","status":"passed","time":{"start":1703494526539,"stop":1703494533830,"duration":7291}},{"uid":"497dd5a13d47e128","reportUrl":"https://javister.github.io/javister-docker-base/1031//#testresult/497dd5a13d47e128","status":"passed","time":{"start":1703494237244,"stop":1703494244451,"duration":7207}},{"uid":"3f46dc4a89a7ecf7","reportUrl":"https://javister.github.io/javister-docker-base/1027//#testresult/3f46dc4a89a7ecf7","status":"passed","time":{"start":1702976742834,"stop":1702976750105,"duration":7271}},{"uid":"e5082874a186e72a","reportUrl":"https://javister.github.io/javister-docker-base/1028//#testresult/e5082874a186e72a","status":"passed","time":{"start":1702976652720,"stop":1702976660056,"duration":7336}},{"uid":"d26e791964f43eb1","reportUrl":"https://javister.github.io/javister-docker-base/1023//#testresult/d26e791964f43eb1","status":"passed","time":{"start":1702889197025,"stop":1702889204319,"duration":7294}},{"uid":"ce73819e47f8c7a8","reportUrl":"https://javister.github.io/javister-docker-base/1022//#testresult/ce73819e47f8c7a8","status":"passed","time":{"start":1702889149226,"stop":1702889156669,"duration":7443}},{"uid":"a32df9faf4b1177a","reportUrl":"https://javister.github.io/javister-docker-base/1019//#testresult/a32df9faf4b1177a","status":"passed","time":{"start":1702628797579,"stop":1702628805000,"duration":7421}},{"uid":"b54d8c71af08a70e","reportUrl":"https://javister.github.io/javister-docker-base/1015//#testresult/b54d8c71af08a70e","status":"passed","time":{"start":1702545419597,"stop":1702545427329,"duration":7732}},{"uid":"cc6e7f5602c34791","reportUrl":"https://javister.github.io/javister-docker-base/1013//#testresult/cc6e7f5602c34791","status":"passed","time":{"start":1702544836127,"stop":1702544844151,"duration":8024}},{"uid":"a8a61974bdb7763e","reportUrl":"https://javister.github.io/javister-docker-base/1010//#testresult/a8a61974bdb7763e","status":"passed","time":{"start":1702283064146,"stop":1702283072289,"duration":8143}},{"uid":"d70b91c489cf341","reportUrl":"https://javister.github.io/javister-docker-base/1008//#testresult/d70b91c489cf341","status":"passed","time":{"start":1702282555294,"stop":1702282563450,"duration":8156}},{"uid":"66a40f1a8140ccd1","reportUrl":"https://javister.github.io/javister-docker-base/1005//#testresult/66a40f1a8140ccd1","status":"passed","time":{"start":1701764215638,"stop":1701764223207,"duration":7569}},{"uid":"d6d823376661982f","reportUrl":"https://javister.github.io/javister-docker-base/1003//#testresult/d6d823376661982f","status":"passed","time":{"start":1701764146936,"stop":1701764154308,"duration":7372}},{"uid":"c232f2ac94cc7967","reportUrl":"https://javister.github.io/javister-docker-base/999//#testresult/c232f2ac94cc7967","status":"passed","time":{"start":1701335378108,"stop":1701335385486,"duration":7378}},{"uid":"3d6f21b6fa94d6bc","reportUrl":"https://javister.github.io/javister-docker-base/995//#testresult/3d6f21b6fa94d6bc","status":"passed","time":{"start":1701075834280,"stop":1701075841684,"duration":7404}},{"uid":"66706f7b899b8865","reportUrl":"https://javister.github.io/javister-docker-base/993//#testresult/66706f7b899b8865","status":"passed","time":{"start":1700643892706,"stop":1700643900226,"duration":7520}},{"uid":"8b73e49cd518284d","reportUrl":"https://javister.github.io/javister-docker-base/992//#testresult/8b73e49cd518284d","status":"passed","time":{"start":1700643538087,"stop":1700643545503,"duration":7416}},{"uid":"7db434c8ce0bafbc","reportUrl":"https://javister.github.io/javister-docker-base/989//#testresult/7db434c8ce0bafbc","status":"passed","time":{"start":1700125034935,"stop":1700125042558,"duration":7623}},{"uid":"862d5418e9cae3c9","reportUrl":"https://javister.github.io/javister-docker-base/988//#testresult/862d5418e9cae3c9","status":"passed","time":{"start":1700124795081,"stop":1700124802626,"duration":7545}}]},"tags":[]},"source":"1e642618ba1ebb6d.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@6652f2e8), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@97cb372, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=67f20900fd17, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=6045a523-4ee1-4abe-9624-83aa22d3e189, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-01-09T08:18:35.795335099Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=f852b149c4eca1d22e27adfe5b7b9f280f8a20c3d679ab391d83946c3304fe89, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@6907747f, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@497a9d23}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1/hostname, hostsPath=/var/lib/docker/containers/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1/hosts, logPath=/var/lib/docker/containers/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1-json.log, id=67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/reverent_golick, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=3b5607e0684055c3ff89db68a810ed47476d3405b145811730d5d98cb700c0d0, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@71f3537c, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7bd3cbf9}, sandboxKey=/var/run/docker/netns/3b5607e06840, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={8c9abc63-4f80-40d9-bb57-cb0906feecaf=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-DHWrpgBB, 67f20900fd17], networkID=f852b149c4eca1d22e27adfe5b7b9f280f8a20c3d679ab391d83946c3304fe89, endpointId=76f91d31e36d9c3464654f12b17e5fa1896f2eeebe2803ea636b1d63c99d4b73, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/67f20900fd17f216d9cff32b6deb1c8652b99c16365cc086679b69affd80c5e1/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16770, exitCode=0, error=, startedAt=2024-01-09T08:18:36.016743142Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@29a5ec70, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@34abefe2)"]}