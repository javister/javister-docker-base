{"uid":"c0f5159d3b36a74a","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"eb3f9b93c813293ad7432cf68068e97f","time":{"start":1715245165665,"stop":1715245173245,"duration":7580},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"2408ee23c76d2dda","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-FIREFOX-20240509-085931.flv","source":"2408ee23c76d2dda.flv","type":"video/x-flv","size":32999}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az730-114"},{"name":"thread","value":"3669@fv-az730-114.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@7d8e63ca), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@44015657, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=3542151da2b4, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=9408d5ac-5a4b-43cc-aa74-f804bd7edb7a, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-05-09T08:59:25.677363575Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=58bcc3b27157ac10db1db8c722c29613930f17d1d6bcd9109747d217a2bc921a, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4b45d6d3, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@53fea79a}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90/hostname, hostsPath=/var/lib/docker/containers/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90/hosts, logPath=/var/lib/docker/containers/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90-json.log, id=3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/blissful_thompson, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=20807e79819e3ba2d72696432c48e7002a5d6e2b9a65e3b21b3dd642469133ea, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@79e3cb32, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@771f50f0}, sandboxKey=/var/run/docker/netns/20807e79819e, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={a50dcaaf-ec5a-4b74-a647-afd02f7b60ea=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-MXWuZsfj, 3542151da2b4], networkID=58bcc3b27157ac10db1db8c722c29613930f17d1d6bcd9109747d217a2bc921a, endpointId=55e93077f47eae44313465a3241571407e02ed512a04a3ac6c0eecac63557a0b, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=10086, exitCode=0, error=, startedAt=2024-05-09T08:59:25.927029001Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@1209e38e, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@346d4422)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":334,"unknown":0,"total":334},"items":[{"uid":"c75d0322b7f92c0d","reportUrl":"https://javister.github.io/javister-docker-base/1118//#testresult/c75d0322b7f92c0d","status":"passed","time":{"start":1714986320922,"stop":1714986328011,"duration":7089}},{"uid":"777a50838439ae7","reportUrl":"https://javister.github.io/javister-docker-base/1116//#testresult/777a50838439ae7","status":"passed","time":{"start":1714726979782,"stop":1714726987223,"duration":7441}},{"uid":"40dec24bd468def5","reportUrl":"https://javister.github.io/javister-docker-base/1113//#testresult/40dec24bd468def5","status":"passed","time":{"start":1714639829964,"stop":1714639837620,"duration":7656}},{"uid":"5be61bbeeee22908","reportUrl":"https://javister.github.io/javister-docker-base/1111//#testresult/5be61bbeeee22908","status":"passed","time":{"start":1714379439001,"stop":1714379446481,"duration":7480}},{"uid":"bad09986a11f7692","reportUrl":"https://javister.github.io/javister-docker-base/1110//#testresult/bad09986a11f7692","status":"passed","time":{"start":1714379139784,"stop":1714379147253,"duration":7469}},{"uid":"383869fdcfecb760","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/383869fdcfecb760","status":"passed","time":{"start":1713948304762,"stop":1713948312027,"duration":7265}},{"uid":"f96e2fa7215a2207","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/f96e2fa7215a2207","status":"passed","time":{"start":1713774269374,"stop":1713774276686,"duration":7312}},{"uid":"c471f29f613c9e49","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/c471f29f613c9e49","status":"passed","time":{"start":1713169361506,"stop":1713169369036,"duration":7530}},{"uid":"a096591fd9d795dc","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/a096591fd9d795dc","status":"passed","time":{"start":1713169023520,"stop":1713169030844,"duration":7324}},{"uid":"6fa9f1a4a989ee7a","reportUrl":"https://javister.github.io/javister-docker-base/1096//#testresult/6fa9f1a4a989ee7a","status":"passed","time":{"start":1712653634051,"stop":1712653641751,"duration":7700}},{"uid":"10a08b26925eef8a","reportUrl":"https://javister.github.io/javister-docker-base/1093//#testresult/10a08b26925eef8a","status":"passed","time":{"start":1712652799383,"stop":1712652806969,"duration":7586}},{"uid":"8044d7e920a24eef","reportUrl":"https://javister.github.io/javister-docker-base/1090//#testresult/8044d7e920a24eef","status":"passed","time":{"start":1711358058161,"stop":1711358067017,"duration":8856}},{"uid":"aadb18ea9f9a0efb","reportUrl":"https://javister.github.io/javister-docker-base/1088//#testresult/aadb18ea9f9a0efb","status":"passed","time":{"start":1710924220102,"stop":1710924227546,"duration":7444}},{"uid":"db1ab1476d392f0","reportUrl":"https://javister.github.io/javister-docker-base/1085//#testresult/db1ab1476d392f0","status":"passed","time":{"start":1710837912302,"stop":1710837919513,"duration":7211}},{"uid":"1a4cf42b998d80d6","reportUrl":"https://javister.github.io/javister-docker-base/1084//#testresult/1a4cf42b998d80d6","status":"passed","time":{"start":1710837870270,"stop":1710837877618,"duration":7348}},{"uid":"2fcfc853977368ca","reportUrl":"https://javister.github.io/javister-docker-base/1081//#testresult/2fcfc853977368ca","status":"passed","time":{"start":1710405796016,"stop":1710405803344,"duration":7328}},{"uid":"17c3d37e018e3967","reportUrl":"https://javister.github.io/javister-docker-base/1080//#testresult/17c3d37e018e3967","status":"passed","time":{"start":1710405584805,"stop":1710405592214,"duration":7409}},{"uid":"5c6bc64348573ea0","reportUrl":"https://javister.github.io/javister-docker-base/1077//#testresult/5c6bc64348573ea0","status":"passed","time":{"start":1710320016501,"stop":1710320023726,"duration":7225}},{"uid":"aaebdb679683638e","reportUrl":"https://javister.github.io/javister-docker-base/1073//#testresult/aaebdb679683638e","status":"passed","time":{"start":1710148258937,"stop":1710148266221,"duration":7284}},{"uid":"1dd006846d25bf17","reportUrl":"https://javister.github.io/javister-docker-base/1071//#testresult/1dd006846d25bf17","status":"passed","time":{"start":1709713896404,"stop":1709713903632,"duration":7228}}]},"tags":[]},"source":"c0f5159d3b36a74a.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@7d8e63ca), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@44015657, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=3542151da2b4, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=9408d5ac-5a4b-43cc-aa74-f804bd7edb7a, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-05-09T08:59:25.677363575Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=58bcc3b27157ac10db1db8c722c29613930f17d1d6bcd9109747d217a2bc921a, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4b45d6d3, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@53fea79a}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90/hostname, hostsPath=/var/lib/docker/containers/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90/hosts, logPath=/var/lib/docker/containers/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90-json.log, id=3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/blissful_thompson, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=20807e79819e3ba2d72696432c48e7002a5d6e2b9a65e3b21b3dd642469133ea, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@79e3cb32, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@771f50f0}, sandboxKey=/var/run/docker/netns/20807e79819e, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={a50dcaaf-ec5a-4b74-a647-afd02f7b60ea=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-MXWuZsfj, 3542151da2b4], networkID=58bcc3b27157ac10db1db8c722c29613930f17d1d6bcd9109747d217a2bc921a, endpointId=55e93077f47eae44313465a3241571407e02ed512a04a3ac6c0eecac63557a0b, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/3542151da2b443088bd11ec76f7dfec1143bd0fc92a25e43493cf3dd38630a90/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=10086, exitCode=0, error=, startedAt=2024-05-09T08:59:25.927029001Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@1209e38e, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@346d4422)"]}