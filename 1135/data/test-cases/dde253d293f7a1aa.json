{"uid":"dde253d293f7a1aa","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"45d41414bea5a3bec1f4595dee878e2b","time":{"start":1717489716328,"stop":1717489722023,"duration":5695},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1717489716324,"stop":1717489716326,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"2e5ed6e51cb00f9f","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-CHROME-20240604-082840.flv","source":"2e5ed6e51cb00f9f.flv","type":"video/x-flv","size":24787}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az774-216"},{"name":"thread","value":"3515@fv-az774-216.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@10eef71d), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@11b884b2, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=b1ac0bbdcd9f, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=ce69b5c3-bed6-47a2-ad46-db095bc3f00e, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-06-04T08:28:36.337962433Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=2a194e6a286f2bd5a768a0c6b9d40ebb9e7a9fcaf33fae4aad12bb1f400fdebe, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@10db1d7b, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@49bcfa30}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538/hostname, hostsPath=/var/lib/docker/containers/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538/hosts, logPath=/var/lib/docker/containers/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538-json.log, id=b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/lucid_varahamihira, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=ba9e5718783323f647fe780c1df91afe8c07e9a7b72db477ce0f2a565e10a3bd, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@403f922d, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@58224c4c}, sandboxKey=/var/run/docker/netns/ba9e57187833, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={6cb82dd0-fd6e-4991-9c69-4af7bad18ed7=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-CRKCr7rj, b1ac0bbdcd9f], networkID=2a194e6a286f2bd5a768a0c6b9d40ebb9e7a9fcaf33fae4aad12bb1f400fdebe, endpointId=814863eecb1980233c025b85ba77404e7165cc728af5a86cd3ef0b060c225dc9, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16922, exitCode=0, error=, startedAt=2024-06-04T08:28:36.560699567Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@10daa2f6, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@3e19b7a7)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":339,"unknown":0,"total":339},"items":[{"uid":"fee502d44cba9f47","reportUrl":"https://javister.github.io/javister-docker-base/1132//#testresult/fee502d44cba9f47","status":"passed","time":{"start":1717405023525,"stop":1717405029188,"duration":5663}},{"uid":"3ee1f606b860defc","reportUrl":"https://javister.github.io/javister-docker-base/1129//#testresult/3ee1f606b860defc","status":"passed","time":{"start":1717059231242,"stop":1717059236883,"duration":5641}},{"uid":"de804b08842c5312","reportUrl":"https://javister.github.io/javister-docker-base/1125//#testresult/de804b08842c5312","status":"passed","time":{"start":1716195789115,"stop":1716195794775,"duration":5660}},{"uid":"ec3573c838a9e1a2","reportUrl":"https://javister.github.io/javister-docker-base/1122//#testresult/ec3573c838a9e1a2","status":"passed","time":{"start":1715589536818,"stop":1715589542597,"duration":5779}},{"uid":"f54c96dd3fd1fa3f","reportUrl":"https://javister.github.io/javister-docker-base/1120//#testresult/f54c96dd3fd1fa3f","status":"passed","time":{"start":1715245228061,"stop":1715245233944,"duration":5883}},{"uid":"89ad2f401dbff8a7","reportUrl":"https://javister.github.io/javister-docker-base/1118//#testresult/89ad2f401dbff8a7","status":"passed","time":{"start":1714986378654,"stop":1714986384245,"duration":5591}},{"uid":"a05ef15f6ca97e4e","reportUrl":"https://javister.github.io/javister-docker-base/1116//#testresult/a05ef15f6ca97e4e","status":"passed","time":{"start":1714727040005,"stop":1714727045723,"duration":5718}},{"uid":"f16682e7d51c32fd","reportUrl":"https://javister.github.io/javister-docker-base/1113//#testresult/f16682e7d51c32fd","status":"passed","time":{"start":1714639889985,"stop":1714639895701,"duration":5716}},{"uid":"b832193c168ab3c6","reportUrl":"https://javister.github.io/javister-docker-base/1111//#testresult/b832193c168ab3c6","status":"passed","time":{"start":1714379498896,"stop":1714379504570,"duration":5674}},{"uid":"52021374d985f08f","reportUrl":"https://javister.github.io/javister-docker-base/1110//#testresult/52021374d985f08f","status":"passed","time":{"start":1714379199448,"stop":1714379205148,"duration":5700}},{"uid":"f9680bf731d2fb91","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/f9680bf731d2fb91","status":"passed","time":{"start":1713948363900,"stop":1713948369609,"duration":5709}},{"uid":"39f7cf4c92c8e49a","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/39f7cf4c92c8e49a","status":"passed","time":{"start":1713774328601,"stop":1713774334323,"duration":5722}},{"uid":"b89ef59f8c4bf48a","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/b89ef59f8c4bf48a","status":"passed","time":{"start":1713169289678,"stop":1713169295492,"duration":5814}},{"uid":"602b13ff51094f6b","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/602b13ff51094f6b","status":"passed","time":{"start":1713168953191,"stop":1713168958871,"duration":5680}},{"uid":"4d1f89a0ac0c54d9","reportUrl":"https://javister.github.io/javister-docker-base/1096//#testresult/4d1f89a0ac0c54d9","status":"passed","time":{"start":1712653560269,"stop":1712653566281,"duration":6012}},{"uid":"ead603260a3954fd","reportUrl":"https://javister.github.io/javister-docker-base/1093//#testresult/ead603260a3954fd","status":"passed","time":{"start":1712652726800,"stop":1712652732635,"duration":5835}},{"uid":"d6c45de30df4b8cb","reportUrl":"https://javister.github.io/javister-docker-base/1090//#testresult/d6c45de30df4b8cb","status":"passed","time":{"start":1711357969939,"stop":1711357976110,"duration":6171}},{"uid":"26095b611197c7ab","reportUrl":"https://javister.github.io/javister-docker-base/1088//#testresult/26095b611197c7ab","status":"passed","time":{"start":1710924131455,"stop":1710924137561,"duration":6106}},{"uid":"3c14dd4503ce295d","reportUrl":"https://javister.github.io/javister-docker-base/1085//#testresult/3c14dd4503ce295d","status":"passed","time":{"start":1710837825686,"stop":1710837831734,"duration":6048}},{"uid":"fa126968e15fcc11","reportUrl":"https://javister.github.io/javister-docker-base/1084//#testresult/fa126968e15fcc11","status":"passed","time":{"start":1710837780660,"stop":1710837786894,"duration":6234}}]},"tags":[]},"source":"dde253d293f7a1aa.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@10eef71d), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@11b884b2, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=b1ac0bbdcd9f, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=ce69b5c3-bed6-47a2-ad46-db095bc3f00e, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-06-04T08:28:36.337962433Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=2a194e6a286f2bd5a768a0c6b9d40ebb9e7a9fcaf33fae4aad12bb1f400fdebe, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@10db1d7b, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@49bcfa30}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538/hostname, hostsPath=/var/lib/docker/containers/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538/hosts, logPath=/var/lib/docker/containers/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538-json.log, id=b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/lucid_varahamihira, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=ba9e5718783323f647fe780c1df91afe8c07e9a7b72db477ce0f2a565e10a3bd, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@403f922d, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@58224c4c}, sandboxKey=/var/run/docker/netns/ba9e57187833, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={6cb82dd0-fd6e-4991-9c69-4af7bad18ed7=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-CRKCr7rj, b1ac0bbdcd9f], networkID=2a194e6a286f2bd5a768a0c6b9d40ebb9e7a9fcaf33fae4aad12bb1f400fdebe, endpointId=814863eecb1980233c025b85ba77404e7165cc728af5a86cd3ef0b060c225dc9, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/b1ac0bbdcd9fd6bb930dea6b295c4336aa05056e693863cafc45865e6e785538/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16922, exitCode=0, error=, startedAt=2024-06-04T08:28:36.560699567Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@10daa2f6, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@3e19b7a7)"]}