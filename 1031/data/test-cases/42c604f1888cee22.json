{"uid":"42c604f1888cee22","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"489f578e8a5a0be5bbaabec9eeb68262","time":{"start":1703494125539,"stop":1703494140629,"duration":15090},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1703494090109,"stop":1703494090112,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"1a1eeffff0758142","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-FIREFOX-20231225-084858.flv","source":"1a1eeffff0758142.flv","type":"video/x-flv","size":36938}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az570-420"},{"name":"thread","value":"3696@fv-az570-420.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@572828ab), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@42ff6620, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=780052a9a48c, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=0fb7a22c-b8c6-43ac-a989-845a9a6b591c, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-25T08:48:52.825674605Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=3041b63470ca20ba8f12a216fae23760cc69f82118f4d9d794da1afa0c44380e, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3f323f89, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7b446b7a}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f/hostname, hostsPath=/var/lib/docker/containers/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f/hosts, logPath=/var/lib/docker/containers/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f-json.log, id=780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/pedantic_neumann, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=752faf4d245e99028363c44070448f93965314b15ee63f2fcddf1efde9c16a1f, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4781178f, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7f04d6e7}, sandboxKey=/var/run/docker/netns/752faf4d245e, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={51a6f0c3-cafc-4e20-a383-8a4666a421cf=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-VBRCLDWT, 780052a9a48c], networkID=3041b63470ca20ba8f12a216fae23760cc69f82118f4d9d794da1afa0c44380e, endpointId=2639f3e2c862a61f80d89fdbb50ca45fd10b3903328e0d09ddd70a7a6b3594fc, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=6428, exitCode=0, error=, startedAt=2023-12-25T08:48:53.0666921Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@516460f9, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@9a3de14)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":297,"unknown":0,"total":297},"items":[{"uid":"d112daf70351dc90","reportUrl":"https://javister.github.io/javister-docker-base/1027//#testresult/d112daf70351dc90","status":"passed","time":{"start":1702976631404,"stop":1702976646906,"duration":15502}},{"uid":"8eae84c2f93817","reportUrl":"https://javister.github.io/javister-docker-base/1028//#testresult/8eae84c2f93817","status":"passed","time":{"start":1702976540932,"stop":1702976556094,"duration":15162}},{"uid":"27cf9854b47b8527","reportUrl":"https://javister.github.io/javister-docker-base/1023//#testresult/27cf9854b47b8527","status":"passed","time":{"start":1702889083323,"stop":1702889099785,"duration":16462}},{"uid":"1ed44018e5555ca4","reportUrl":"https://javister.github.io/javister-docker-base/1022//#testresult/1ed44018e5555ca4","status":"passed","time":{"start":1702889034768,"stop":1702889050470,"duration":15702}},{"uid":"e3c18fd99686d93c","reportUrl":"https://javister.github.io/javister-docker-base/1019//#testresult/e3c18fd99686d93c","status":"passed","time":{"start":1702628684735,"stop":1702628700340,"duration":15605}},{"uid":"75e3e9cbc33bce45","reportUrl":"https://javister.github.io/javister-docker-base/1015//#testresult/75e3e9cbc33bce45","status":"passed","time":{"start":1702545306704,"stop":1702545322250,"duration":15546}},{"uid":"6255ed0be9925ee0","reportUrl":"https://javister.github.io/javister-docker-base/1013//#testresult/6255ed0be9925ee0","status":"passed","time":{"start":1702544939414,"stop":1702544946822,"duration":7408}},{"uid":"56f9a9a9331dc3be","reportUrl":"https://javister.github.io/javister-docker-base/1010//#testresult/56f9a9a9331dc3be","status":"passed","time":{"start":1702283167263,"stop":1702283174603,"duration":7340}},{"uid":"5833b3188acc7221","reportUrl":"https://javister.github.io/javister-docker-base/1008//#testresult/5833b3188acc7221","status":"passed","time":{"start":1702282658461,"stop":1702282665889,"duration":7428}},{"uid":"cffeee5c72ed99f8","reportUrl":"https://javister.github.io/javister-docker-base/1005//#testresult/cffeee5c72ed99f8","status":"passed","time":{"start":1701764296771,"stop":1701764304241,"duration":7470}},{"uid":"3f24ac304ffc8e8a","reportUrl":"https://javister.github.io/javister-docker-base/1003//#testresult/3f24ac304ffc8e8a","status":"passed","time":{"start":1701764227531,"stop":1701764235014,"duration":7483}},{"uid":"d27ecc04ebbef1fb","reportUrl":"https://javister.github.io/javister-docker-base/999//#testresult/d27ecc04ebbef1fb","status":"passed","time":{"start":1701335458741,"stop":1701335466263,"duration":7522}},{"uid":"84ffebd81a1c5457","reportUrl":"https://javister.github.io/javister-docker-base/995//#testresult/84ffebd81a1c5457","status":"passed","time":{"start":1701075915421,"stop":1701075922900,"duration":7479}},{"uid":"2ed7b7ec67eaa4b0","reportUrl":"https://javister.github.io/javister-docker-base/993//#testresult/2ed7b7ec67eaa4b0","status":"passed","time":{"start":1700643975163,"stop":1700643982763,"duration":7600}},{"uid":"459dc28583efbd3c","reportUrl":"https://javister.github.io/javister-docker-base/992//#testresult/459dc28583efbd3c","status":"passed","time":{"start":1700643618631,"stop":1700643626039,"duration":7408}},{"uid":"54e2d434dfb6d18a","reportUrl":"https://javister.github.io/javister-docker-base/989//#testresult/54e2d434dfb6d18a","status":"passed","time":{"start":1700124906704,"stop":1700124923268,"duration":16564}},{"uid":"b33aad4aeef8a7b8","reportUrl":"https://javister.github.io/javister-docker-base/988//#testresult/b33aad4aeef8a7b8","status":"passed","time":{"start":1700124667924,"stop":1700124683611,"duration":15687}},{"uid":"d17432a9321df33d","reportUrl":"https://javister.github.io/javister-docker-base/984//#testresult/d17432a9321df33d","status":"passed","time":{"start":1699348434955,"stop":1699348451193,"duration":16238}},{"uid":"efb7cf378cab741d","reportUrl":"https://javister.github.io/javister-docker-base/982//#testresult/efb7cf378cab741d","status":"passed","time":{"start":1699347902988,"stop":1699347919785,"duration":16797}},{"uid":"d16d20d7ca3ea216","reportUrl":"https://javister.github.io/javister-docker-base/979//#testresult/d16d20d7ca3ea216","status":"passed","time":{"start":1699259765831,"stop":1699259810493,"duration":44662}}]},"tags":[]},"source":"42c604f1888cee22.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@572828ab), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@42ff6620, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=780052a9a48c, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=0fb7a22c-b8c6-43ac-a989-845a9a6b591c, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-25T08:48:52.825674605Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=3041b63470ca20ba8f12a216fae23760cc69f82118f4d9d794da1afa0c44380e, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3f323f89, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7b446b7a}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f/hostname, hostsPath=/var/lib/docker/containers/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f/hosts, logPath=/var/lib/docker/containers/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f-json.log, id=780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/pedantic_neumann, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=752faf4d245e99028363c44070448f93965314b15ee63f2fcddf1efde9c16a1f, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4781178f, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7f04d6e7}, sandboxKey=/var/run/docker/netns/752faf4d245e, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={51a6f0c3-cafc-4e20-a383-8a4666a421cf=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-VBRCLDWT, 780052a9a48c], networkID=3041b63470ca20ba8f12a216fae23760cc69f82118f4d9d794da1afa0c44380e, endpointId=2639f3e2c862a61f80d89fdbb50ca45fd10b3903328e0d09ddd70a7a6b3594fc, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/780052a9a48c1a333656be20825b1f7b09d522d9f4913f9006a593c4f5e5d47f/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=6428, exitCode=0, error=, startedAt=2023-12-25T08:48:53.0666921Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@516460f9, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@9a3de14)"]}