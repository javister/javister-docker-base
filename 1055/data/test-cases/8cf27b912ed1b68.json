{"uid":"8cf27b912ed1b68","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"8f2a1194bf23ab0a20a1c8cd2c0c3515","time":{"start":1707466489302,"stop":1707466495006,"duration":5704},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"20a96dcc648a2dcd","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-CHROME-20240209-081453.flv","source":"20a96dcc648a2dcd.flv","type":"video/x-flv","size":24761}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1240-792"},{"name":"thread","value":"3647@fv-az1240-792.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@72658236), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@67cfb5a5, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=eb5dbc01610b, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=13599b65-c860-48f6-b034-8ca90a99bd47, org.testcontainers.version=1.19.4}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-02-09T08:14:49.311139289Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=e07cc803446baf86083b6d82cf90ab481ff092dd866a91c393c46c19034ab153, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@44c4eaaf, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4e038408}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2/hostname, hostsPath=/var/lib/docker/containers/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2/hosts, logPath=/var/lib/docker/containers/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2-json.log, id=eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/vibrant_greider, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=18299eaafde04f2d54b3db07f58f6e7a5a7ccdbb3cfcea94813cdc196aa197e5, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@2be5f5d8, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@13dbba38}, sandboxKey=/var/run/docker/netns/18299eaafde0, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={087f4b09-ac82-46e8-a131-06a9255618bb=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-ivbxE9qB, eb5dbc01610b], networkID=e07cc803446baf86083b6d82cf90ab481ff092dd866a91c393c46c19034ab153, endpointId=4cc9cf8deffad2496fd865ef81c8c8553d4dadabd2d681fe038eb296c6834203, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=17599, exitCode=0, error=, startedAt=2024-02-09T08:14:49.555180424Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@7029bb7e, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@22d852b7)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":308,"unknown":0,"total":308},"items":[{"uid":"5840c3caf6f6817c","reportUrl":"https://javister.github.io/javister-docker-base/1052//#testresult/5840c3caf6f6817c","status":"passed","time":{"start":1707209135425,"stop":1707209141082,"duration":5657}},{"uid":"cf4c616cac4aab4c","reportUrl":"https://javister.github.io/javister-docker-base/1050//#testresult/cf4c616cac4aab4c","status":"passed","time":{"start":1707124311016,"stop":1707124316817,"duration":5801}},{"uid":"3a833d6b5d3aa218","reportUrl":"https://javister.github.io/javister-docker-base/1048//#testresult/3a833d6b5d3aa218","status":"passed","time":{"start":1706260211078,"stop":1706260216764,"duration":5686}},{"uid":"b82a91b6797c1dbe","reportUrl":"https://javister.github.io/javister-docker-base/1046//#testresult/b82a91b6797c1dbe","status":"passed","time":{"start":1705566550753,"stop":1705566556448,"duration":5695}},{"uid":"4de0ab4e16fb070","reportUrl":"https://javister.github.io/javister-docker-base/1044//#testresult/4de0ab4e16fb070","status":"passed","time":{"start":1705308672751,"stop":1705308678401,"duration":5650}},{"uid":"350fb722ca4cd5ec","reportUrl":"https://javister.github.io/javister-docker-base/1042//#testresult/350fb722ca4cd5ec","status":"passed","time":{"start":1704877082676,"stop":1704877088462,"duration":5786}},{"uid":"26bd2de91bc7a0ac","reportUrl":"https://javister.github.io/javister-docker-base/1040//#testresult/26bd2de91bc7a0ac","status":"passed","time":{"start":1704876609786,"stop":1704876615552,"duration":5766}},{"uid":"221c0a66580ed825","reportUrl":"https://javister.github.io/javister-docker-base/1037//#testresult/221c0a66580ed825","status":"passed","time":{"start":1704788310135,"stop":1704788315785,"duration":5650}},{"uid":"e2e2b0bf9274153a","reportUrl":"https://javister.github.io/javister-docker-base/1034//#testresult/e2e2b0bf9274153a","status":"passed","time":{"start":1703839933588,"stop":1703839939240,"duration":5652}},{"uid":"3dae17e6886b1a45","reportUrl":"https://javister.github.io/javister-docker-base/1032//#testresult/3dae17e6886b1a45","status":"passed","time":{"start":1703494520801,"stop":1703494526537,"duration":5736}},{"uid":"e19695aca822d8bb","reportUrl":"https://javister.github.io/javister-docker-base/1031//#testresult/e19695aca822d8bb","status":"passed","time":{"start":1703494231671,"stop":1703494237242,"duration":5571}},{"uid":"4f6d402491c7a5d1","reportUrl":"https://javister.github.io/javister-docker-base/1027//#testresult/4f6d402491c7a5d1","status":"passed","time":{"start":1702976737239,"stop":1702976742831,"duration":5592}},{"uid":"79c3b86939f1596","reportUrl":"https://javister.github.io/javister-docker-base/1028//#testresult/79c3b86939f1596","status":"passed","time":{"start":1702976647134,"stop":1702976652717,"duration":5583}},{"uid":"29364f7fe6280fd2","reportUrl":"https://javister.github.io/javister-docker-base/1023//#testresult/29364f7fe6280fd2","status":"passed","time":{"start":1702889191405,"stop":1702889197023,"duration":5618}},{"uid":"b0ab226931c8d3f9","reportUrl":"https://javister.github.io/javister-docker-base/1022//#testresult/b0ab226931c8d3f9","status":"passed","time":{"start":1702889143511,"stop":1702889149223,"duration":5712}},{"uid":"4b58050fe649b8a4","reportUrl":"https://javister.github.io/javister-docker-base/1019//#testresult/4b58050fe649b8a4","status":"passed","time":{"start":1702628791869,"stop":1702628797577,"duration":5708}},{"uid":"8871dbea1966114a","reportUrl":"https://javister.github.io/javister-docker-base/1015//#testresult/8871dbea1966114a","status":"passed","time":{"start":1702545413640,"stop":1702545419595,"duration":5955}},{"uid":"3b45618ee9d0cade","reportUrl":"https://javister.github.io/javister-docker-base/1013//#testresult/3b45618ee9d0cade","status":"passed","time":{"start":1702544830024,"stop":1702544836123,"duration":6099}},{"uid":"3cc6f96b942345e1","reportUrl":"https://javister.github.io/javister-docker-base/1010//#testresult/3cc6f96b942345e1","status":"passed","time":{"start":1702283057872,"stop":1702283064142,"duration":6270}},{"uid":"874426241bf0c3c9","reportUrl":"https://javister.github.io/javister-docker-base/1008//#testresult/874426241bf0c3c9","status":"passed","time":{"start":1702282549198,"stop":1702282555289,"duration":6091}}]},"tags":[]},"source":"8cf27b912ed1b68.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@72658236), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@67cfb5a5, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=eb5dbc01610b, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=13599b65-c860-48f6-b034-8ca90a99bd47, org.testcontainers.version=1.19.4}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-02-09T08:14:49.311139289Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=e07cc803446baf86083b6d82cf90ab481ff092dd866a91c393c46c19034ab153, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@44c4eaaf, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4e038408}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2/hostname, hostsPath=/var/lib/docker/containers/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2/hosts, logPath=/var/lib/docker/containers/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2-json.log, id=eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/vibrant_greider, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=18299eaafde04f2d54b3db07f58f6e7a5a7ccdbb3cfcea94813cdc196aa197e5, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@2be5f5d8, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@13dbba38}, sandboxKey=/var/run/docker/netns/18299eaafde0, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={087f4b09-ac82-46e8-a131-06a9255618bb=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-ivbxE9qB, eb5dbc01610b], networkID=e07cc803446baf86083b6d82cf90ab481ff092dd866a91c393c46c19034ab153, endpointId=4cc9cf8deffad2496fd865ef81c8c8553d4dadabd2d681fe038eb296c6834203, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/eb5dbc01610bec191f679b7be8e587f50c6574d8bfeb33d44438c6987d15edd2/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=17599, exitCode=0, error=, startedAt=2024-02-09T08:14:49.555180424Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@7029bb7e, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@22d852b7)"]}