{"uid":"6075e67faa6d4a36","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"45d41414bea5a3bec1f4595dee878e2b","time":{"start":1707466306552,"stop":1707466343511,"duration":36959},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1707466306509,"stop":1707466306515,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"e63711a6c2267fb0","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-CHROME-20240209-081221.flv","source":"e63711a6c2267fb0.flv","type":"video/x-flv","size":28195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1240-792"},{"name":"thread","value":"3647@fv-az1240-792.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@72658236), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@2c5e9c6c, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=1e2a2ea6ae97, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=13599b65-c860-48f6-b034-8ca90a99bd47, org.testcontainers.version=1.19.4}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-02-09T08:12:05.39401682Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=e07cc803446baf86083b6d82cf90ab481ff092dd866a91c393c46c19034ab153, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@34ca9203, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@6112e201}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a/hostname, hostsPath=/var/lib/docker/containers/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a/hosts, logPath=/var/lib/docker/containers/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a-json.log, id=1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/lucid_cartwright, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=a1405e77f2f89fc09908a8edb4484217681a7210a3ec92372b4b2eb5149a39ed, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@389a6ad8, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@13913285}, sandboxKey=/var/run/docker/netns/a1405e77f2f8, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={087f4b09-ac82-46e8-a131-06a9255618bb=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-GwaLtQQ7, 1e2a2ea6ae97], networkID=e07cc803446baf86083b6d82cf90ab481ff092dd866a91c393c46c19034ab153, endpointId=924c3cd31111c80c69465813cd4d03bbffa4986b110527b4307a89fb50d40c02, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=4347, exitCode=0, error=, startedAt=2024-02-09T08:12:05.657793353Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@73abf07e, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@5df06e0)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":308,"unknown":0,"total":308},"items":[{"uid":"768833e460d40ea0","reportUrl":"https://javister.github.io/javister-docker-base/1052//#testresult/768833e460d40ea0","status":"passed","time":{"start":1707208974467,"stop":1707209010357,"duration":35890}},{"uid":"4afb1a93f8a8faa","reportUrl":"https://javister.github.io/javister-docker-base/1050//#testresult/4afb1a93f8a8faa","status":"passed","time":{"start":1707124145495,"stop":1707124182356,"duration":36861}},{"uid":"813510df1549efb1","reportUrl":"https://javister.github.io/javister-docker-base/1048//#testresult/813510df1549efb1","status":"passed","time":{"start":1706260276154,"stop":1706260281855,"duration":5701}},{"uid":"38f3b8c44bc661bd","reportUrl":"https://javister.github.io/javister-docker-base/1046//#testresult/38f3b8c44bc661bd","status":"passed","time":{"start":1705566406789,"stop":1705566443447,"duration":36658}},{"uid":"7eb22c84fa3e2cf4","reportUrl":"https://javister.github.io/javister-docker-base/1044//#testresult/7eb22c84fa3e2cf4","status":"passed","time":{"start":1705308530278,"stop":1705308566205,"duration":35927}},{"uid":"a6ffca70f1b8f9d7","reportUrl":"https://javister.github.io/javister-docker-base/1042//#testresult/a6ffca70f1b8f9d7","status":"passed","time":{"start":1704876937193,"stop":1704876973930,"duration":36737}},{"uid":"77d756584a11bc38","reportUrl":"https://javister.github.io/javister-docker-base/1040//#testresult/77d756584a11bc38","status":"passed","time":{"start":1704876460552,"stop":1704876499673,"duration":39121}},{"uid":"b7170f55e174db1","reportUrl":"https://javister.github.io/javister-docker-base/1037//#testresult/b7170f55e174db1","status":"passed","time":{"start":1704788167608,"stop":1704788203813,"duration":36205}},{"uid":"623a41cec26bc55f","reportUrl":"https://javister.github.io/javister-docker-base/1034//#testresult/623a41cec26bc55f","status":"passed","time":{"start":1703839790783,"stop":1703839826880,"duration":36097}},{"uid":"fbb5c1a75cf71d5e","reportUrl":"https://javister.github.io/javister-docker-base/1032//#testresult/fbb5c1a75cf71d5e","status":"passed","time":{"start":1703494375339,"stop":1703494413037,"duration":37698}},{"uid":"daccc3d53ff38383","reportUrl":"https://javister.github.io/javister-docker-base/1031//#testresult/daccc3d53ff38383","status":"passed","time":{"start":1703494090332,"stop":1703494125536,"duration":35204}},{"uid":"be2b1428217b458","reportUrl":"https://javister.github.io/javister-docker-base/1027//#testresult/be2b1428217b458","status":"passed","time":{"start":1702976596010,"stop":1702976631401,"duration":35391}},{"uid":"6307a1765eed0e45","reportUrl":"https://javister.github.io/javister-docker-base/1028//#testresult/6307a1765eed0e45","status":"passed","time":{"start":1702976505748,"stop":1702976540928,"duration":35180}},{"uid":"375c02096f6b8f2b","reportUrl":"https://javister.github.io/javister-docker-base/1023//#testresult/375c02096f6b8f2b","status":"passed","time":{"start":1702889045169,"stop":1702889083319,"duration":38150}},{"uid":"5436cc0457b451eb","reportUrl":"https://javister.github.io/javister-docker-base/1022//#testresult/5436cc0457b451eb","status":"passed","time":{"start":1702888998411,"stop":1702889034764,"duration":36353}},{"uid":"5751adebfbf9b433","reportUrl":"https://javister.github.io/javister-docker-base/1019//#testresult/5751adebfbf9b433","status":"passed","time":{"start":1702628649134,"stop":1702628684731,"duration":35597}},{"uid":"7a7c1d47c8cf9501","reportUrl":"https://javister.github.io/javister-docker-base/1015//#testresult/7a7c1d47c8cf9501","status":"passed","time":{"start":1702545270473,"stop":1702545306700,"duration":36227}},{"uid":"71a68af5fa5f070e","reportUrl":"https://javister.github.io/javister-docker-base/1013//#testresult/71a68af5fa5f070e","status":"passed","time":{"start":1702544933731,"stop":1702544939411,"duration":5680}},{"uid":"7c9019b9c89e65ea","reportUrl":"https://javister.github.io/javister-docker-base/1010//#testresult/7c9019b9c89e65ea","status":"passed","time":{"start":1702283161530,"stop":1702283167260,"duration":5730}},{"uid":"76531d6b9818a14e","reportUrl":"https://javister.github.io/javister-docker-base/1008//#testresult/76531d6b9818a14e","status":"passed","time":{"start":1702282652824,"stop":1702282658459,"duration":5635}}]},"tags":[]},"source":"6075e67faa6d4a36.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@72658236), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@2c5e9c6c, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=1e2a2ea6ae97, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=13599b65-c860-48f6-b034-8ca90a99bd47, org.testcontainers.version=1.19.4}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-02-09T08:12:05.39401682Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=e07cc803446baf86083b6d82cf90ab481ff092dd866a91c393c46c19034ab153, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@34ca9203, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@6112e201}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a/hostname, hostsPath=/var/lib/docker/containers/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a/hosts, logPath=/var/lib/docker/containers/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a-json.log, id=1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/lucid_cartwright, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=a1405e77f2f89fc09908a8edb4484217681a7210a3ec92372b4b2eb5149a39ed, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@389a6ad8, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@13913285}, sandboxKey=/var/run/docker/netns/a1405e77f2f8, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={087f4b09-ac82-46e8-a131-06a9255618bb=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-GwaLtQQ7, 1e2a2ea6ae97], networkID=e07cc803446baf86083b6d82cf90ab481ff092dd866a91c393c46c19034ab153, endpointId=924c3cd31111c80c69465813cd4d03bbffa4986b110527b4307a89fb50d40c02, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/1e2a2ea6ae97691f2f4e5ef0e062bd6643e0d6bc7a03ea206e9af60505b1919a/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=4347, exitCode=0, error=, startedAt=2024-02-09T08:12:05.657793353Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@73abf07e, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@5df06e0)"]}