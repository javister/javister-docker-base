{"uid":"ff67a7a0b4690ce3","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"8f2a1194bf23ab0a20a1c8cd2c0c3515","time":{"start":1701075828341,"stop":1701075834277,"duration":5936},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"efc0e3b83c299a3f","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-CHROME-20231127-090352.flv","source":"efc0e3b83c299a3f.flv","type":"video/x-flv","size":22742}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1567-374"},{"name":"thread","value":"3609@fv-az1567-374.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@1cab32a7), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@3550b980, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=6b70c71a1e2f, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=131a5dfb-22c7-4ca6-a4d5-f2de453612b1, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-11-27T09:03:48.348556862Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=0515cdbd658631d74943dbbcd394341224ef60e41432ee3fd3d6db58ea962b5c, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@40786870, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3c3afad}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8/hostname, hostsPath=/var/lib/docker/containers/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8/hosts, logPath=/var/lib/docker/containers/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8-json.log, id=6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/serene_dewdney, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=3871e91b635c61aa41eff480bbeef6f8e52d3d2807faaaa701f14369d051808f, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3f4d19a8, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@52019470}, sandboxKey=/var/run/docker/netns/3871e91b635c, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={4b2931e9-8615-4de5-b093-76d2ecd8345f=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-Kud44S3z, 6b70c71a1e2f], networkID=0515cdbd658631d74943dbbcd394341224ef60e41432ee3fd3d6db58ea962b5c, endpointId=c3b3474a7e4d402796e98ef92bcf7a7aa1fffd9de1eb80dc4b804492205b2c0f, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=10939, exitCode=0, error=, startedAt=2023-11-27T09:03:48.625282872Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@51b94da8, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@4f192ef5)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":284,"unknown":0,"total":284},"items":[{"uid":"1afca0258ca3acb8","reportUrl":"https://javister.github.io/javister-docker-base/993//#testresult/1afca0258ca3acb8","status":"passed","time":{"start":1700643886811,"stop":1700643892704,"duration":5893}},{"uid":"8da15a873841f4e8","reportUrl":"https://javister.github.io/javister-docker-base/992//#testresult/8da15a873841f4e8","status":"passed","time":{"start":1700643532211,"stop":1700643538085,"duration":5874}},{"uid":"1f78f5835d09083","reportUrl":"https://javister.github.io/javister-docker-base/989//#testresult/1f78f5835d09083","status":"passed","time":{"start":1700125029066,"stop":1700125034933,"duration":5867}},{"uid":"84c94b7443edf59b","reportUrl":"https://javister.github.io/javister-docker-base/988//#testresult/84c94b7443edf59b","status":"passed","time":{"start":1700124789104,"stop":1700124795079,"duration":5975}},{"uid":"77557cc6bfd3ce5d","reportUrl":"https://javister.github.io/javister-docker-base/984//#testresult/77557cc6bfd3ce5d","status":"passed","time":{"start":1699348558760,"stop":1699348564633,"duration":5873}},{"uid":"3efb1741f7c22937","reportUrl":"https://javister.github.io/javister-docker-base/982//#testresult/3efb1741f7c22937","status":"passed","time":{"start":1699348024503,"stop":1699348030414,"duration":5911}},{"uid":"32c2f21d143be460","reportUrl":"https://javister.github.io/javister-docker-base/979//#testresult/32c2f21d143be460","status":"passed","time":{"start":1699259961170,"stop":1699259969831,"duration":8661}},{"uid":"8240c8fa53064637","reportUrl":"https://javister.github.io/javister-docker-base/977//#testresult/8240c8fa53064637","status":"passed","time":{"start":1698915234994,"stop":1698915244293,"duration":9299}},{"uid":"5bd88b7520874e6a","reportUrl":"https://javister.github.io/javister-docker-base/975//#testresult/5bd88b7520874e6a","status":"passed","time":{"start":1698138520788,"stop":1698138531168,"duration":10380}},{"uid":"1ba4b9a7176111ae","reportUrl":"https://javister.github.io/javister-docker-base/972//#testresult/1ba4b9a7176111ae","status":"passed","time":{"start":1698137725781,"stop":1698137736220,"duration":10439}},{"uid":"22d2d97060bc1f9","reportUrl":"https://javister.github.io/javister-docker-base/973//#testresult/22d2d97060bc1f9","status":"passed","time":{"start":1698137622222,"stop":1698137629914,"duration":7692}},{"uid":"b2c9c6d86011d018","reportUrl":"https://javister.github.io/javister-docker-base/967//#testresult/b2c9c6d86011d018","status":"passed","time":{"start":1697187845207,"stop":1697187853559,"duration":8352}},{"uid":"77c00f0d49142542","reportUrl":"https://javister.github.io/javister-docker-base/966//#testresult/77c00f0d49142542","status":"passed","time":{"start":1697187707342,"stop":1697187714918,"duration":7576}},{"uid":"1405c9ba6a2e81e0","reportUrl":"https://javister.github.io/javister-docker-base/963//#testresult/1405c9ba6a2e81e0","status":"passed","time":{"start":1697015138546,"stop":1697015146843,"duration":8297}},{"uid":"d44bc7cd0068bf0a","reportUrl":"https://javister.github.io/javister-docker-base/960//#testresult/d44bc7cd0068bf0a","status":"passed","time":{"start":1696321797705,"stop":1696321805936,"duration":8231}},{"uid":"f2127ee7ad616b18","reportUrl":"https://javister.github.io/javister-docker-base/961//#testresult/f2127ee7ad616b18","status":"passed","time":{"start":1696321764937,"stop":1696321772397,"duration":7460}},{"uid":"10b1ee7b34d46927","reportUrl":"https://javister.github.io/javister-docker-base/957//#testresult/10b1ee7b34d46927","status":"passed","time":{"start":1696235490626,"stop":1696235498029,"duration":7403}},{"uid":"41a43ecb3777cb91","reportUrl":"https://javister.github.io/javister-docker-base/955//#testresult/41a43ecb3777cb91","status":"passed","time":{"start":1695632461270,"stop":1695632468928,"duration":7658}},{"uid":"96c3c1b4dce526fa","reportUrl":"https://javister.github.io/javister-docker-base/953//#testresult/96c3c1b4dce526fa","status":"passed","time":{"start":1695200742050,"stop":1695200749433,"duration":7383}},{"uid":"9528e30c0ee46aa2","reportUrl":"https://javister.github.io/javister-docker-base/951//#testresult/9528e30c0ee46aa2","status":"passed","time":{"start":1694421517751,"stop":1694421524953,"duration":7202}}]},"tags":[]},"source":"ff67a7a0b4690ce3.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@1cab32a7), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@3550b980, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=6b70c71a1e2f, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=131a5dfb-22c7-4ca6-a4d5-f2de453612b1, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-11-27T09:03:48.348556862Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=0515cdbd658631d74943dbbcd394341224ef60e41432ee3fd3d6db58ea962b5c, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@40786870, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3c3afad}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8/hostname, hostsPath=/var/lib/docker/containers/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8/hosts, logPath=/var/lib/docker/containers/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8-json.log, id=6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/serene_dewdney, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=3871e91b635c61aa41eff480bbeef6f8e52d3d2807faaaa701f14369d051808f, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3f4d19a8, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@52019470}, sandboxKey=/var/run/docker/netns/3871e91b635c, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={4b2931e9-8615-4de5-b093-76d2ecd8345f=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-Kud44S3z, 6b70c71a1e2f], networkID=0515cdbd658631d74943dbbcd394341224ef60e41432ee3fd3d6db58ea962b5c, endpointId=c3b3474a7e4d402796e98ef92bcf7a7aa1fffd9de1eb80dc4b804492205b2c0f, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/6b70c71a1e2f48ac7e15ca81f7413b1ef3d360634af26c8010074228fc6bcbb8/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=10939, exitCode=0, error=, startedAt=2023-11-27T09:03:48.625282872Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@51b94da8, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@4f192ef5)"]}