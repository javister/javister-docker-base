{"uid":"ead603260a3954fd","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"45d41414bea5a3bec1f4595dee878e2b","time":{"start":1712652726800,"stop":1712652732635,"duration":5835},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1712652726794,"stop":1712652726796,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"d8948f5216557c3a","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-CHROME-20240409-085211.flv","source":"d8948f5216557c3a.flv","type":"video/x-flv","size":22985}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1530-593"},{"name":"thread","value":"3803@fv-az1530-593.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@23b2c978), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@2605dd53, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=e8704413ae31, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=89601ab4-cfa3-4e5a-8dcc-14554320f33b, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-04-09T08:52:06.811381107Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=0e41e121df1f2590cb823d25a310152b43a7a480fb044ed0609ae258a1bd5c8f, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4a21955a, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7f68258e}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad/hostname, hostsPath=/var/lib/docker/containers/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad/hosts, logPath=/var/lib/docker/containers/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad-json.log, id=e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/optimistic_mccarthy, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=74d196ce2656ce81d6bebbdd75f76b18c0dc9237379819470ac290da5e9e889b, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@298abd72, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4ad19614}, sandboxKey=/var/run/docker/netns/74d196ce2656, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={e65ae868-0c11-4060-b623-99df906b3073=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-JkRrt6B9, e8704413ae31], networkID=0e41e121df1f2590cb823d25a310152b43a7a480fb044ed0609ae258a1bd5c8f, endpointId=3bc79f790ce68fa07478681261f253a94fd7a365bf7553e634b7295f5b64d4bf, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=8356, exitCode=0, error=, startedAt=2024-04-09T08:52:07.056933614Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@c1c5151, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@32664109)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":323,"unknown":0,"total":323},"items":[{"uid":"d6c45de30df4b8cb","reportUrl":"https://javister.github.io/javister-docker-base/1090//#testresult/d6c45de30df4b8cb","status":"passed","time":{"start":1711357969939,"stop":1711357976110,"duration":6171}},{"uid":"26095b611197c7ab","reportUrl":"https://javister.github.io/javister-docker-base/1088//#testresult/26095b611197c7ab","status":"passed","time":{"start":1710924131455,"stop":1710924137561,"duration":6106}},{"uid":"3c14dd4503ce295d","reportUrl":"https://javister.github.io/javister-docker-base/1085//#testresult/3c14dd4503ce295d","status":"passed","time":{"start":1710837825686,"stop":1710837831734,"duration":6048}},{"uid":"fa126968e15fcc11","reportUrl":"https://javister.github.io/javister-docker-base/1084//#testresult/fa126968e15fcc11","status":"passed","time":{"start":1710837780660,"stop":1710837786894,"duration":6234}},{"uid":"b94b4e88a4095dcc","reportUrl":"https://javister.github.io/javister-docker-base/1081//#testresult/b94b4e88a4095dcc","status":"passed","time":{"start":1710405708139,"stop":1710405714097,"duration":5958}},{"uid":"114419e114b39424","reportUrl":"https://javister.github.io/javister-docker-base/1080//#testresult/114419e114b39424","status":"passed","time":{"start":1710405496797,"stop":1710405502884,"duration":6087}},{"uid":"fd75ec797c540a52","reportUrl":"https://javister.github.io/javister-docker-base/1077//#testresult/fd75ec797c540a52","status":"passed","time":{"start":1710320074873,"stop":1710320080460,"duration":5587}},{"uid":"28f6aceebecd2816","reportUrl":"https://javister.github.io/javister-docker-base/1073//#testresult/28f6aceebecd2816","status":"passed","time":{"start":1710148317990,"stop":1710148323559,"duration":5569}},{"uid":"802895e4db3de9cf","reportUrl":"https://javister.github.io/javister-docker-base/1071//#testresult/802895e4db3de9cf","status":"passed","time":{"start":1709713955601,"stop":1709713961270,"duration":5669}},{"uid":"e4fa8b514137e7d1","reportUrl":"https://javister.github.io/javister-docker-base/1065//#testresult/e4fa8b514137e7d1","status":"passed","time":{"start":1708590941488,"stop":1708590980701,"duration":39213}},{"uid":"307a10d64dd427e8","reportUrl":"https://javister.github.io/javister-docker-base/1063//#testresult/307a10d64dd427e8","status":"passed","time":{"start":1708504060486,"stop":1708504099235,"duration":38749}},{"uid":"37fcfbf6cc503933","reportUrl":"https://javister.github.io/javister-docker-base/1060//#testresult/37fcfbf6cc503933","status":"passed","time":{"start":1707900717511,"stop":1707900753455,"duration":35944}},{"uid":"837c2510f7897544","reportUrl":"https://javister.github.io/javister-docker-base/1058//#testresult/837c2510f7897544","status":"passed","time":{"start":1707726278474,"stop":1707726314698,"duration":36224}},{"uid":"4f1084db99f19a03","reportUrl":"https://javister.github.io/javister-docker-base/1056//#testresult/4f1084db99f19a03","status":"passed","time":{"start":1707466515474,"stop":1707466554315,"duration":38841}},{"uid":"6075e67faa6d4a36","reportUrl":"https://javister.github.io/javister-docker-base/1055//#testresult/6075e67faa6d4a36","status":"passed","time":{"start":1707466306552,"stop":1707466343511,"duration":36959}},{"uid":"768833e460d40ea0","reportUrl":"https://javister.github.io/javister-docker-base/1052//#testresult/768833e460d40ea0","status":"passed","time":{"start":1707208974467,"stop":1707209010357,"duration":35890}},{"uid":"4afb1a93f8a8faa","reportUrl":"https://javister.github.io/javister-docker-base/1050//#testresult/4afb1a93f8a8faa","status":"passed","time":{"start":1707124145495,"stop":1707124182356,"duration":36861}},{"uid":"813510df1549efb1","reportUrl":"https://javister.github.io/javister-docker-base/1048//#testresult/813510df1549efb1","status":"passed","time":{"start":1706260276154,"stop":1706260281855,"duration":5701}},{"uid":"38f3b8c44bc661bd","reportUrl":"https://javister.github.io/javister-docker-base/1046//#testresult/38f3b8c44bc661bd","status":"passed","time":{"start":1705566406789,"stop":1705566443447,"duration":36658}},{"uid":"7eb22c84fa3e2cf4","reportUrl":"https://javister.github.io/javister-docker-base/1044//#testresult/7eb22c84fa3e2cf4","status":"passed","time":{"start":1705308530278,"stop":1705308566205,"duration":35927}}]},"tags":[]},"source":"ead603260a3954fd.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@23b2c978), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@2605dd53, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=e8704413ae31, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=89601ab4-cfa3-4e5a-8dcc-14554320f33b, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-04-09T08:52:06.811381107Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=0e41e121df1f2590cb823d25a310152b43a7a480fb044ed0609ae258a1bd5c8f, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4a21955a, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7f68258e}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad/hostname, hostsPath=/var/lib/docker/containers/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad/hosts, logPath=/var/lib/docker/containers/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad-json.log, id=e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/optimistic_mccarthy, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=74d196ce2656ce81d6bebbdd75f76b18c0dc9237379819470ac290da5e9e889b, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@298abd72, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4ad19614}, sandboxKey=/var/run/docker/netns/74d196ce2656, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={e65ae868-0c11-4060-b623-99df906b3073=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-JkRrt6B9, e8704413ae31], networkID=0e41e121df1f2590cb823d25a310152b43a7a480fb044ed0609ae258a1bd5c8f, endpointId=3bc79f790ce68fa07478681261f253a94fd7a365bf7553e634b7295f5b64d4bf, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/e8704413ae31f06b1ee1665427f40d0b2c158e224b38004fc0601e3c135251ad/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=8356, exitCode=0, error=, startedAt=2024-04-09T08:52:07.056933614Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@c1c5151, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@32664109)"]}