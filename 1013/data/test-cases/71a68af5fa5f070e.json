{"uid":"71a68af5fa5f070e","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"45d41414bea5a3bec1f4595dee878e2b","time":{"start":1702544933731,"stop":1702544939411,"duration":5680},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1702544933726,"stop":1702544933728,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"ca29055e73d6da46","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-CHROME-20231214-090858.flv","source":"ca29055e73d6da46.flv","type":"video/x-flv","size":23762}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az651-222"},{"name":"thread","value":"3711@fv-az651-222.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@25f4d4a9), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@171134e2, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=bac80954e449, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=e72da253-ee24-435e-b688-4803febc5da1, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-14T09:08:53.744898448Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=05fb43a629b5e9ae2c1cf3247db55df5387f2082cb9a879b92c19fc47a064987, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@36265e3e, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@62a71d2}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d/hostname, hostsPath=/var/lib/docker/containers/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d/hosts, logPath=/var/lib/docker/containers/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d-json.log, id=bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/vigorous_ptolemy, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=f2540a99a0a3aadd8a814ee3c4d0096b3e264237f9e89b39ff73e82ff53ee748, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@1a37b8a2, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5c43e294}, sandboxKey=/var/run/docker/netns/f2540a99a0a3, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={92993deb-c64f-4d47-bdf3-0d691ea61922=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-s4pdyqoK, bac80954e449], networkID=05fb43a629b5e9ae2c1cf3247db55df5387f2082cb9a879b92c19fc47a064987, endpointId=47d58ce2e82275a3a5ea4b8a688eb23a5390d93c1f37e9d36310da5571d9f161, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=14862, exitCode=0, error=, startedAt=2023-12-14T09:08:53.988199133Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@5890908c, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@d61dead)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":290,"unknown":0,"total":290},"items":[{"uid":"7c9019b9c89e65ea","reportUrl":"https://javister.github.io/javister-docker-base/1010//#testresult/7c9019b9c89e65ea","status":"passed","time":{"start":1702283161530,"stop":1702283167260,"duration":5730}},{"uid":"76531d6b9818a14e","reportUrl":"https://javister.github.io/javister-docker-base/1008//#testresult/76531d6b9818a14e","status":"passed","time":{"start":1702282652824,"stop":1702282658459,"duration":5635}},{"uid":"ce05e282dd8e8037","reportUrl":"https://javister.github.io/javister-docker-base/1005//#testresult/ce05e282dd8e8037","status":"passed","time":{"start":1701764290932,"stop":1701764296769,"duration":5837}},{"uid":"b56574e6af013ebf","reportUrl":"https://javister.github.io/javister-docker-base/1003//#testresult/b56574e6af013ebf","status":"passed","time":{"start":1701764221599,"stop":1701764227529,"duration":5930}},{"uid":"660237076abffb3","reportUrl":"https://javister.github.io/javister-docker-base/999//#testresult/660237076abffb3","status":"passed","time":{"start":1701335452871,"stop":1701335458739,"duration":5868}},{"uid":"d713748aa3284ffb","reportUrl":"https://javister.github.io/javister-docker-base/995//#testresult/d713748aa3284ffb","status":"passed","time":{"start":1701075909565,"stop":1701075915418,"duration":5853}},{"uid":"29274dab6aa8b5cf","reportUrl":"https://javister.github.io/javister-docker-base/993//#testresult/29274dab6aa8b5cf","status":"passed","time":{"start":1700643969147,"stop":1700643975161,"duration":6014}},{"uid":"a66a48e04e65a067","reportUrl":"https://javister.github.io/javister-docker-base/992//#testresult/a66a48e04e65a067","status":"passed","time":{"start":1700643612805,"stop":1700643618629,"duration":5824}},{"uid":"230c67d96ffe5d58","reportUrl":"https://javister.github.io/javister-docker-base/989//#testresult/230c67d96ffe5d58","status":"passed","time":{"start":1700124868647,"stop":1700124906701,"duration":38054}},{"uid":"6e0e3166d370c0d2","reportUrl":"https://javister.github.io/javister-docker-base/988//#testresult/6e0e3166d370c0d2","status":"passed","time":{"start":1700124631584,"stop":1700124667921,"duration":36337}},{"uid":"a790d980fcee43ac","reportUrl":"https://javister.github.io/javister-docker-base/984//#testresult/a790d980fcee43ac","status":"passed","time":{"start":1699348398022,"stop":1699348434952,"duration":36930}},{"uid":"8b8ffd396e3038a9","reportUrl":"https://javister.github.io/javister-docker-base/982//#testresult/8b8ffd396e3038a9","status":"passed","time":{"start":1699347864538,"stop":1699347902984,"duration":38446}},{"uid":"20ce1466e47f6524","reportUrl":"https://javister.github.io/javister-docker-base/979//#testresult/20ce1466e47f6524","status":"passed","time":{"start":1699259690008,"stop":1699259765818,"duration":75810}},{"uid":"9b243b2372ce0c09","reportUrl":"https://javister.github.io/javister-docker-base/977//#testresult/9b243b2372ce0c09","status":"passed","time":{"start":1698915339292,"stop":1698915348445,"duration":9153}},{"uid":"71cadd6ec9ccd10e","reportUrl":"https://javister.github.io/javister-docker-base/975//#testresult/71cadd6ec9ccd10e","status":"passed","time":{"start":1698138160741,"stop":1698138256097,"duration":95356}},{"uid":"4f3ec7fd41cfa2cf","reportUrl":"https://javister.github.io/javister-docker-base/972//#testresult/4f3ec7fd41cfa2cf","status":"passed","time":{"start":1698137363840,"stop":1698137459572,"duration":95732}},{"uid":"4737d9bd4ada499","reportUrl":"https://javister.github.io/javister-docker-base/973//#testresult/4737d9bd4ada499","status":"passed","time":{"start":1698137361349,"stop":1698137423682,"duration":62333}},{"uid":"cb41824931652870","reportUrl":"https://javister.github.io/javister-docker-base/967//#testresult/cb41824931652870","status":"passed","time":{"start":1697187745375,"stop":1697187753971,"duration":8596}},{"uid":"cf52b5a66d1b589b","reportUrl":"https://javister.github.io/javister-docker-base/966//#testresult/cf52b5a66d1b589b","status":"passed","time":{"start":1697187618987,"stop":1697187627203,"duration":8216}},{"uid":"ba991defc0411d92","reportUrl":"https://javister.github.io/javister-docker-base/963//#testresult/ba991defc0411d92","status":"passed","time":{"start":1697015040267,"stop":1697015049195,"duration":8928}}]},"tags":[]},"source":"71a68af5fa5f070e.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@25f4d4a9), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@171134e2, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=bac80954e449, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=e72da253-ee24-435e-b688-4803febc5da1, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-14T09:08:53.744898448Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=05fb43a629b5e9ae2c1cf3247db55df5387f2082cb9a879b92c19fc47a064987, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@36265e3e, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@62a71d2}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d/hostname, hostsPath=/var/lib/docker/containers/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d/hosts, logPath=/var/lib/docker/containers/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d-json.log, id=bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/vigorous_ptolemy, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=f2540a99a0a3aadd8a814ee3c4d0096b3e264237f9e89b39ff73e82ff53ee748, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@1a37b8a2, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5c43e294}, sandboxKey=/var/run/docker/netns/f2540a99a0a3, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={92993deb-c64f-4d47-bdf3-0d691ea61922=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-s4pdyqoK, bac80954e449], networkID=05fb43a629b5e9ae2c1cf3247db55df5387f2082cb9a879b92c19fc47a064987, endpointId=47d58ce2e82275a3a5ea4b8a688eb23a5390d93c1f37e9d36310da5571d9f161, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/bac80954e449591ec8b745bb049c718d5971c8f0f56f4014fbd89a1d6ed7a41d/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=14862, exitCode=0, error=, startedAt=2023-12-14T09:08:53.988199133Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@5890908c, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@d61dead)"]}