{"uid":"27cd1c77e2429b5f","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"8f2a1194bf23ab0a20a1c8cd2c0c3515","time":{"start":1714726973987,"stop":1714726979779,"duration":5792},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"5ece631725a9a6b1","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-CHROME-20240503-090258.flv","source":"5ece631725a9a6b1.flv","type":"video/x-flv","size":25295}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az570-447"},{"name":"thread","value":"3552@fv-az570-447.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@7f78e560), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@446a7c60, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=58369828cc7c, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=b2de583e-12bf-41c6-b805-cac9080764f4, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-05-03T09:02:53.996144006Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=e429f0545667ac7bc57fc4c6314396fd3f09aa112adc6e3a2abf860c35edfe96, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@12d8e8c0, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5d803ba1}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4/hostname, hostsPath=/var/lib/docker/containers/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4/hosts, logPath=/var/lib/docker/containers/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4-json.log, id=58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/blissful_snyder, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=d4bdf5e58ad6064157d68675d98d2840dc3f4ee529fe69db2f1dafe15444549a, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@208f72d3, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3d82297d}, sandboxKey=/var/run/docker/netns/d4bdf5e58ad6, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={ccfe1342-65e5-4f75-95d7-886674ab1b32=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-oX3Bgr6e, 58369828cc7c], networkID=e429f0545667ac7bc57fc4c6314396fd3f09aa112adc6e3a2abf860c35edfe96, endpointId=e82f4627ab595cb750e9c8d1e06f67c6bb337d36afa49a7c54beba9602b108e4, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=9374, exitCode=0, error=, startedAt=2024-05-03T09:02:54.236948512Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@68c958e5, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@34482b6e)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":332,"unknown":0,"total":332},"items":[{"uid":"7a8e6272ef4e73a5","reportUrl":"https://javister.github.io/javister-docker-base/1113//#testresult/7a8e6272ef4e73a5","status":"passed","time":{"start":1714639824165,"stop":1714639829962,"duration":5797}},{"uid":"dd80ffce8870cf72","reportUrl":"https://javister.github.io/javister-docker-base/1111//#testresult/dd80ffce8870cf72","status":"passed","time":{"start":1714379433250,"stop":1714379438999,"duration":5749}},{"uid":"cf2ca46fae6dd1d1","reportUrl":"https://javister.github.io/javister-docker-base/1110//#testresult/cf2ca46fae6dd1d1","status":"passed","time":{"start":1714379134024,"stop":1714379139781,"duration":5757}},{"uid":"ddc1a59fb30f298f","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/ddc1a59fb30f298f","status":"passed","time":{"start":1713948298960,"stop":1713948304759,"duration":5799}},{"uid":"f1995e20cd812576","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/f1995e20cd812576","status":"passed","time":{"start":1713774263620,"stop":1713774269372,"duration":5752}},{"uid":"6f61a3d3a4f73373","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/6f61a3d3a4f73373","status":"passed","time":{"start":1713169355796,"stop":1713169361504,"duration":5708}},{"uid":"859236e73ec2e03b","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/859236e73ec2e03b","status":"passed","time":{"start":1713169017878,"stop":1713169023517,"duration":5639}},{"uid":"2a33488edbede6b1","reportUrl":"https://javister.github.io/javister-docker-base/1096//#testresult/2a33488edbede6b1","status":"passed","time":{"start":1712653628108,"stop":1712653634048,"duration":5940}},{"uid":"db3e189420d1f468","reportUrl":"https://javister.github.io/javister-docker-base/1093//#testresult/db3e189420d1f468","status":"passed","time":{"start":1712652793512,"stop":1712652799381,"duration":5869}},{"uid":"3cb6c76e4c79479f","reportUrl":"https://javister.github.io/javister-docker-base/1090//#testresult/3cb6c76e4c79479f","status":"passed","time":{"start":1711358052558,"stop":1711358058159,"duration":5601}},{"uid":"56a7c44ccf90ae0e","reportUrl":"https://javister.github.io/javister-docker-base/1088//#testresult/56a7c44ccf90ae0e","status":"passed","time":{"start":1710924214414,"stop":1710924220100,"duration":5686}},{"uid":"de3bf425911534ef","reportUrl":"https://javister.github.io/javister-docker-base/1085//#testresult/de3bf425911534ef","status":"passed","time":{"start":1710837906729,"stop":1710837912300,"duration":5571}},{"uid":"376e8b7b140698e8","reportUrl":"https://javister.github.io/javister-docker-base/1084//#testresult/376e8b7b140698e8","status":"passed","time":{"start":1710837864622,"stop":1710837870268,"duration":5646}},{"uid":"863407a17082e418","reportUrl":"https://javister.github.io/javister-docker-base/1081//#testresult/863407a17082e418","status":"passed","time":{"start":1710405790335,"stop":1710405796014,"duration":5679}},{"uid":"179e69b7c1287aa6","reportUrl":"https://javister.github.io/javister-docker-base/1080//#testresult/179e69b7c1287aa6","status":"passed","time":{"start":1710405579213,"stop":1710405584803,"duration":5590}},{"uid":"e787cf77b4a3fc42","reportUrl":"https://javister.github.io/javister-docker-base/1077//#testresult/e787cf77b4a3fc42","status":"passed","time":{"start":1710320010909,"stop":1710320016499,"duration":5590}},{"uid":"ff0df49188c7c9a","reportUrl":"https://javister.github.io/javister-docker-base/1073//#testresult/ff0df49188c7c9a","status":"passed","time":{"start":1710148253335,"stop":1710148258934,"duration":5599}},{"uid":"941a46f46901965f","reportUrl":"https://javister.github.io/javister-docker-base/1071//#testresult/941a46f46901965f","status":"passed","time":{"start":1709713890779,"stop":1709713896402,"duration":5623}},{"uid":"6a19cafc9fe55cc1","reportUrl":"https://javister.github.io/javister-docker-base/1065//#testresult/6a19cafc9fe55cc1","status":"passed","time":{"start":1708591050446,"stop":1708591056148,"duration":5702}},{"uid":"8656c37e535c83d3","reportUrl":"https://javister.github.io/javister-docker-base/1063//#testresult/8656c37e535c83d3","status":"passed","time":{"start":1708504169448,"stop":1708504175246,"duration":5798}}]},"tags":[]},"source":"27cd1c77e2429b5f.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@7f78e560), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@446a7c60, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=58369828cc7c, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=b2de583e-12bf-41c6-b805-cac9080764f4, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-05-03T09:02:53.996144006Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=e429f0545667ac7bc57fc4c6314396fd3f09aa112adc6e3a2abf860c35edfe96, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@12d8e8c0, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5d803ba1}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4/hostname, hostsPath=/var/lib/docker/containers/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4/hosts, logPath=/var/lib/docker/containers/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4-json.log, id=58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/blissful_snyder, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=d4bdf5e58ad6064157d68675d98d2840dc3f4ee529fe69db2f1dafe15444549a, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@208f72d3, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3d82297d}, sandboxKey=/var/run/docker/netns/d4bdf5e58ad6, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={ccfe1342-65e5-4f75-95d7-886674ab1b32=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-oX3Bgr6e, 58369828cc7c], networkID=e429f0545667ac7bc57fc4c6314396fd3f09aa112adc6e3a2abf860c35edfe96, endpointId=e82f4627ab595cb750e9c8d1e06f67c6bb337d36afa49a7c54beba9602b108e4, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/58369828cc7c17d6f0f4797d17cc7bc569a3bac6e27980829564edabf2f8e4a4/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=9374, exitCode=0, error=, startedAt=2024-05-03T09:02:54.236948512Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@68c958e5, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@34482b6e)"]}