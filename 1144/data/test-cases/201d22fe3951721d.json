{"uid":"201d22fe3951721d","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"eb3f9b93c813293ad7432cf68068e97f","time":{"start":1718613387589,"stop":1718613395552,"duration":7963},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"106812c9bff88ad4","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-FIREFOX-20240617-083633.flv","source":"106812c9bff88ad4.flv","type":"video/x-flv","size":37795}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az1106-692"},{"name":"thread","value":"3686@fv-az1106-692.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@173276ee), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@2ca6d5f0, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=1c52d2c6318e, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=06c6109a-5f1b-4932-b42a-d00d550d0d52, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-06-17T08:36:27.599997333Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=81893d19b9dff7050928f85d7724da2423612e1cc2fd2c143f3693fc967392f1, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7f40169c, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5a03adce}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834/hostname, hostsPath=/var/lib/docker/containers/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834/hosts, logPath=/var/lib/docker/containers/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834-json.log, id=1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/crazy_goodall, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=937b21897111c4e607e383643132326246ff79260e3c1375c00228e3de514f19, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7d353eb3, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5ab72962}, sandboxKey=/var/run/docker/netns/937b21897111, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={5ebcddb2-1c78-41d1-abb9-a0f00c3d8768=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-nLdVqwMG, 1c52d2c6318e], networkID=81893d19b9dff7050928f85d7724da2423612e1cc2fd2c143f3693fc967392f1, endpointId=24cd7c39b8fc21a3ca4e1e95aefdf27cf519651ee693703f14d33b1ee1e13228, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=6553, exitCode=0, error=, startedAt=2024-06-17T08:36:27.86103384Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@25bc205e, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@621684fa)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":342,"unknown":0,"total":342},"items":[{"uid":"91eb68b78484311e","reportUrl":"https://javister.github.io/javister-docker-base/1142//#testresult/91eb68b78484311e","status":"passed","time":{"start":1718612879337,"stop":1718612887545,"duration":8208}},{"uid":"de6ec50280e72fc1","reportUrl":"https://javister.github.io/javister-docker-base/1139//#testresult/de6ec50280e72fc1","status":"passed","time":{"start":1718269696783,"stop":1718269704844,"duration":8061}},{"uid":"59ec2cfd6a0211ec","reportUrl":"https://javister.github.io/javister-docker-base/1135//#testresult/59ec2cfd6a0211ec","status":"passed","time":{"start":1717489597435,"stop":1717489605595,"duration":8160}},{"uid":"bbe65bee5f6a7d4e","reportUrl":"https://javister.github.io/javister-docker-base/1132//#testresult/bbe65bee5f6a7d4e","status":"passed","time":{"start":1717404906855,"stop":1717404914949,"duration":8094}},{"uid":"7f9e7bee18538193","reportUrl":"https://javister.github.io/javister-docker-base/1129//#testresult/7f9e7bee18538193","status":"passed","time":{"start":1717059114091,"stop":1717059122045,"duration":7954}},{"uid":"cf455a040502c0c9","reportUrl":"https://javister.github.io/javister-docker-base/1125//#testresult/cf455a040502c0c9","status":"passed","time":{"start":1716195670366,"stop":1716195678289,"duration":7923}},{"uid":"5ea8e37fa94b7265","reportUrl":"https://javister.github.io/javister-docker-base/1122//#testresult/5ea8e37fa94b7265","status":"passed","time":{"start":1715589477639,"stop":1715589485043,"duration":7404}},{"uid":"c0f5159d3b36a74a","reportUrl":"https://javister.github.io/javister-docker-base/1120//#testresult/c0f5159d3b36a74a","status":"passed","time":{"start":1715245165665,"stop":1715245173245,"duration":7580}},{"uid":"c75d0322b7f92c0d","reportUrl":"https://javister.github.io/javister-docker-base/1118//#testresult/c75d0322b7f92c0d","status":"passed","time":{"start":1714986320922,"stop":1714986328011,"duration":7089}},{"uid":"777a50838439ae7","reportUrl":"https://javister.github.io/javister-docker-base/1116//#testresult/777a50838439ae7","status":"passed","time":{"start":1714726979782,"stop":1714726987223,"duration":7441}},{"uid":"40dec24bd468def5","reportUrl":"https://javister.github.io/javister-docker-base/1113//#testresult/40dec24bd468def5","status":"passed","time":{"start":1714639829964,"stop":1714639837620,"duration":7656}},{"uid":"5be61bbeeee22908","reportUrl":"https://javister.github.io/javister-docker-base/1111//#testresult/5be61bbeeee22908","status":"passed","time":{"start":1714379439001,"stop":1714379446481,"duration":7480}},{"uid":"bad09986a11f7692","reportUrl":"https://javister.github.io/javister-docker-base/1110//#testresult/bad09986a11f7692","status":"passed","time":{"start":1714379139784,"stop":1714379147253,"duration":7469}},{"uid":"383869fdcfecb760","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/383869fdcfecb760","status":"passed","time":{"start":1713948304762,"stop":1713948312027,"duration":7265}},{"uid":"f96e2fa7215a2207","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/f96e2fa7215a2207","status":"passed","time":{"start":1713774269374,"stop":1713774276686,"duration":7312}},{"uid":"c471f29f613c9e49","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/c471f29f613c9e49","status":"passed","time":{"start":1713169361506,"stop":1713169369036,"duration":7530}},{"uid":"a096591fd9d795dc","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/a096591fd9d795dc","status":"passed","time":{"start":1713169023520,"stop":1713169030844,"duration":7324}},{"uid":"6fa9f1a4a989ee7a","reportUrl":"https://javister.github.io/javister-docker-base/1096//#testresult/6fa9f1a4a989ee7a","status":"passed","time":{"start":1712653634051,"stop":1712653641751,"duration":7700}},{"uid":"10a08b26925eef8a","reportUrl":"https://javister.github.io/javister-docker-base/1093//#testresult/10a08b26925eef8a","status":"passed","time":{"start":1712652799383,"stop":1712652806969,"duration":7586}},{"uid":"8044d7e920a24eef","reportUrl":"https://javister.github.io/javister-docker-base/1090//#testresult/8044d7e920a24eef","status":"passed","time":{"start":1711358058161,"stop":1711358067017,"duration":8856}}]},"tags":[]},"source":"201d22fe3951721d.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@173276ee), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@2ca6d5f0, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=1c52d2c6318e, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=06c6109a-5f1b-4932-b42a-d00d550d0d52, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-06-17T08:36:27.599997333Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=81893d19b9dff7050928f85d7724da2423612e1cc2fd2c143f3693fc967392f1, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7f40169c, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5a03adce}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834/hostname, hostsPath=/var/lib/docker/containers/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834/hosts, logPath=/var/lib/docker/containers/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834-json.log, id=1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/crazy_goodall, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=937b21897111c4e607e383643132326246ff79260e3c1375c00228e3de514f19, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7d353eb3, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5ab72962}, sandboxKey=/var/run/docker/netns/937b21897111, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={5ebcddb2-1c78-41d1-abb9-a0f00c3d8768=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-nLdVqwMG, 1c52d2c6318e], networkID=81893d19b9dff7050928f85d7724da2423612e1cc2fd2c143f3693fc967392f1, endpointId=24cd7c39b8fc21a3ca4e1e95aefdf27cf519651ee693703f14d33b1ee1e13228, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/1c52d2c6318eba437586635cc63253a78b278941747bcd4dcae69cbd7bb77834/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=6553, exitCode=0, error=, startedAt=2024-06-17T08:36:27.86103384Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@25bc205e, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@621684fa)"]}