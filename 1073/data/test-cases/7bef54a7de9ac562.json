{"uid":"7bef54a7de9ac562","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"489f578e8a5a0be5bbaabec9eeb68262","time":{"start":1710148323561,"stop":1710148330949,"duration":7388},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1710148317986,"stop":1710148317987,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"b976a4a8b6579720","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-FIREFOX-20240311-091209.flv","source":"b976a4a8b6579720.flv","type":"video/x-flv","size":34074}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az1019-343"},{"name":"thread","value":"3693@fv-az1019-343.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@6731ab2f), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@571b2ed3, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=cffb2044d710, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=474d5343-de04-4478-8b5f-2ca467b76782, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-03-11T09:12:03.568259801Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=428fe808836d05961a0d49874a04e08f42abded29b49d100154de7f4c8e7d986, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@1cf7be66, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@228d3ad7}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4/hostname, hostsPath=/var/lib/docker/containers/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4/hosts, logPath=/var/lib/docker/containers/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4-json.log, id=cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/admiring_cannon, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=c60b8d2fa0d4e9197d0a8d75d71b5d08bfe1b87ff524ac2dcac3018ebdc3892e, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3b1656df, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@32277020}, sandboxKey=/var/run/docker/netns/c60b8d2fa0d4, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={d30b05b5-870c-4c5b-aeb9-7156be4b2596=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-zH91CsLe, cffb2044d710], networkID=428fe808836d05961a0d49874a04e08f42abded29b49d100154de7f4c8e7d986, endpointId=5f328eca615bf02da8c10d8d338f3b76ed1f1a70b86b606fca48338c4500df4e, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=19131, exitCode=0, error=, startedAt=2024-03-11T09:12:03.810113203Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@1302ec8c, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@589227b9)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":315,"unknown":0,"total":315},"items":[{"uid":"ebceaa7f02c96ba1","reportUrl":"https://javister.github.io/javister-docker-base/1071//#testresult/ebceaa7f02c96ba1","status":"passed","time":{"start":1709713961272,"stop":1709713968621,"duration":7349}},{"uid":"e63bea1056ae4c6a","reportUrl":"https://javister.github.io/javister-docker-base/1065//#testresult/e63bea1056ae4c6a","status":"passed","time":{"start":1708590980797,"stop":1708590997441,"duration":16644}},{"uid":"83b91c0e77a8584f","reportUrl":"https://javister.github.io/javister-docker-base/1063//#testresult/83b91c0e77a8584f","status":"passed","time":{"start":1708504099339,"stop":1708504115863,"duration":16524}},{"uid":"3bf0bc6dc852710e","reportUrl":"https://javister.github.io/javister-docker-base/1060//#testresult/3bf0bc6dc852710e","status":"passed","time":{"start":1707900753552,"stop":1707900769260,"duration":15708}},{"uid":"47c0fe7d36c857dd","reportUrl":"https://javister.github.io/javister-docker-base/1058//#testresult/47c0fe7d36c857dd","status":"passed","time":{"start":1707726314796,"stop":1707726330309,"duration":15513}},{"uid":"d2ae9af3566e7745","reportUrl":"https://javister.github.io/javister-docker-base/1056//#testresult/d2ae9af3566e7745","status":"passed","time":{"start":1707466554436,"stop":1707466570973,"duration":16537}},{"uid":"101eb717e9ead70c","reportUrl":"https://javister.github.io/javister-docker-base/1055//#testresult/101eb717e9ead70c","status":"passed","time":{"start":1707466343597,"stop":1707466359470,"duration":15873}},{"uid":"46ac15983c3fdd57","reportUrl":"https://javister.github.io/javister-docker-base/1052//#testresult/46ac15983c3fdd57","status":"passed","time":{"start":1707209010466,"stop":1707209025886,"duration":15420}},{"uid":"835a750e8338a3af","reportUrl":"https://javister.github.io/javister-docker-base/1050//#testresult/835a750e8338a3af","status":"passed","time":{"start":1707124182472,"stop":1707124198551,"duration":16079}},{"uid":"48994c351a4c324b","reportUrl":"https://javister.github.io/javister-docker-base/1048//#testresult/48994c351a4c324b","status":"passed","time":{"start":1706260281858,"stop":1706260289321,"duration":7463}},{"uid":"57665ad88fb8a1e1","reportUrl":"https://javister.github.io/javister-docker-base/1046//#testresult/57665ad88fb8a1e1","status":"passed","time":{"start":1705566443453,"stop":1705566459123,"duration":15670}},{"uid":"9ae8a8207bd4769b","reportUrl":"https://javister.github.io/javister-docker-base/1044//#testresult/9ae8a8207bd4769b","status":"passed","time":{"start":1705308566210,"stop":1705308581553,"duration":15343}},{"uid":"cf22a6f364ad2493","reportUrl":"https://javister.github.io/javister-docker-base/1042//#testresult/cf22a6f364ad2493","status":"passed","time":{"start":1704876973934,"stop":1704876989566,"duration":15632}},{"uid":"a88d12b8f0b6fe2b","reportUrl":"https://javister.github.io/javister-docker-base/1040//#testresult/a88d12b8f0b6fe2b","status":"passed","time":{"start":1704876499677,"stop":1704876516444,"duration":16767}},{"uid":"3fd0fc2a012dfd6c","reportUrl":"https://javister.github.io/javister-docker-base/1037//#testresult/3fd0fc2a012dfd6c","status":"passed","time":{"start":1704788203817,"stop":1704788219657,"duration":15840}},{"uid":"bf3af148f5727fc3","reportUrl":"https://javister.github.io/javister-docker-base/1034//#testresult/bf3af148f5727fc3","status":"passed","time":{"start":1703839826884,"stop":1703839842498,"duration":15614}},{"uid":"c72eab0a21e87932","reportUrl":"https://javister.github.io/javister-docker-base/1032//#testresult/c72eab0a21e87932","status":"passed","time":{"start":1703494413041,"stop":1703494429399,"duration":16358}},{"uid":"42c604f1888cee22","reportUrl":"https://javister.github.io/javister-docker-base/1031//#testresult/42c604f1888cee22","status":"passed","time":{"start":1703494125539,"stop":1703494140629,"duration":15090}},{"uid":"d112daf70351dc90","reportUrl":"https://javister.github.io/javister-docker-base/1027//#testresult/d112daf70351dc90","status":"passed","time":{"start":1702976631404,"stop":1702976646906,"duration":15502}},{"uid":"8eae84c2f93817","reportUrl":"https://javister.github.io/javister-docker-base/1028//#testresult/8eae84c2f93817","status":"passed","time":{"start":1702976540932,"stop":1702976556094,"duration":15162}}]},"tags":[]},"source":"7bef54a7de9ac562.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@6731ab2f), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@571b2ed3, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=cffb2044d710, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=474d5343-de04-4478-8b5f-2ca467b76782, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-03-11T09:12:03.568259801Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=428fe808836d05961a0d49874a04e08f42abded29b49d100154de7f4c8e7d986, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@1cf7be66, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@228d3ad7}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4/hostname, hostsPath=/var/lib/docker/containers/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4/hosts, logPath=/var/lib/docker/containers/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4-json.log, id=cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/admiring_cannon, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=c60b8d2fa0d4e9197d0a8d75d71b5d08bfe1b87ff524ac2dcac3018ebdc3892e, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3b1656df, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@32277020}, sandboxKey=/var/run/docker/netns/c60b8d2fa0d4, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={d30b05b5-870c-4c5b-aeb9-7156be4b2596=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-zH91CsLe, cffb2044d710], networkID=428fe808836d05961a0d49874a04e08f42abded29b49d100154de7f4c8e7d986, endpointId=5f328eca615bf02da8c10d8d338f3b76ed1f1a70b86b606fca48338c4500df4e, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/cffb2044d710e3ec3f5f5e7e5369e04d7fd9fb54db9099f7efee4af11423bec4/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=19131, exitCode=0, error=, startedAt=2024-03-11T09:12:03.810113203Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@1302ec8c, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@589227b9)"]}