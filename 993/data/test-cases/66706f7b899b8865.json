{"uid":"66706f7b899b8865","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"eb3f9b93c813293ad7432cf68068e97f","time":{"start":1700643892706,"stop":1700643900226,"duration":7520},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"21077cf9879855c4","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-FIREFOX-20231122-090458.flv","source":"21077cf9879855c4.flv","type":"video/x-flv","size":36659}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az1432-916"},{"name":"thread","value":"3675@fv-az1432-916.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@3b80341), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@50558ae0, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=2777c976b11b, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=f3a01162-e9cc-4355-9861-182e9ce2d0b2, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-11-22T09:04:52.715506217Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=a0fa4efbaafaaf26a725e4078015f865e0282a0a2449b7466b5fe086f4cac296, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@20f06594, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@741f778a}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134/hostname, hostsPath=/var/lib/docker/containers/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134/hosts, logPath=/var/lib/docker/containers/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134-json.log, id=2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/peaceful_herschel, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=bb318fc8d55d14d1df0a8b3b26702ba164b36b220473e0ebad1e64d8bf1c5a6d, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@54b950a3, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7cdac01d}, sandboxKey=/var/run/docker/netns/bb318fc8d55d, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={c309f135-8371-484b-be2a-7a6bd28e974a=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-LKtmUcQ6, 2777c976b11b], networkID=a0fa4efbaafaaf26a725e4078015f865e0282a0a2449b7466b5fe086f4cac296, endpointId=91b1336846eeb398a38fde6ee88809f9a07dc2702cb63432a48a6d1514f1dbf8, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=11780, exitCode=0, error=, startedAt=2023-11-22T09:04:52.996317591Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@5f25c6d7, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@5009599e)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":283,"unknown":0,"total":283},"items":[{"uid":"8b73e49cd518284d","reportUrl":"https://javister.github.io/javister-docker-base/992//#testresult/8b73e49cd518284d","status":"passed","time":{"start":1700643538087,"stop":1700643545503,"duration":7416}},{"uid":"7db434c8ce0bafbc","reportUrl":"https://javister.github.io/javister-docker-base/989//#testresult/7db434c8ce0bafbc","status":"passed","time":{"start":1700125034935,"stop":1700125042558,"duration":7623}},{"uid":"862d5418e9cae3c9","reportUrl":"https://javister.github.io/javister-docker-base/988//#testresult/862d5418e9cae3c9","status":"passed","time":{"start":1700124795081,"stop":1700124802626,"duration":7545}},{"uid":"1a387f0b744bc525","reportUrl":"https://javister.github.io/javister-docker-base/984//#testresult/1a387f0b744bc525","status":"passed","time":{"start":1699348564635,"stop":1699348572392,"duration":7757}},{"uid":"85eee1cd84f39ae1","reportUrl":"https://javister.github.io/javister-docker-base/982//#testresult/85eee1cd84f39ae1","status":"passed","time":{"start":1699348030416,"stop":1699348037860,"duration":7444}},{"uid":"6125f78f10919d9b","reportUrl":"https://javister.github.io/javister-docker-base/979//#testresult/6125f78f10919d9b","status":"passed","time":{"start":1699259969838,"stop":1699259981964,"duration":12126}},{"uid":"43e513d591f2974","reportUrl":"https://javister.github.io/javister-docker-base/977//#testresult/43e513d591f2974","status":"passed","time":{"start":1698915244297,"stop":1698915256951,"duration":12654}},{"uid":"acef143d20242bc4","reportUrl":"https://javister.github.io/javister-docker-base/975//#testresult/acef143d20242bc4","status":"passed","time":{"start":1698138531170,"stop":1698138546333,"duration":15163}},{"uid":"1a4648e04e35349d","reportUrl":"https://javister.github.io/javister-docker-base/972//#testresult/1a4648e04e35349d","status":"passed","time":{"start":1698137736224,"stop":1698137750789,"duration":14565}},{"uid":"9242eded6b092e31","reportUrl":"https://javister.github.io/javister-docker-base/973//#testresult/9242eded6b092e31","status":"passed","time":{"start":1698137629919,"stop":1698137640262,"duration":10343}},{"uid":"11bd696e35c0414f","reportUrl":"https://javister.github.io/javister-docker-base/967//#testresult/11bd696e35c0414f","status":"passed","time":{"start":1697187853562,"stop":1697187864921,"duration":11359}},{"uid":"dc79cf74d334f6af","reportUrl":"https://javister.github.io/javister-docker-base/966//#testresult/dc79cf74d334f6af","status":"passed","time":{"start":1697187714920,"stop":1697187725084,"duration":10164}},{"uid":"d5a9633f0de0b067","reportUrl":"https://javister.github.io/javister-docker-base/963//#testresult/d5a9633f0de0b067","status":"passed","time":{"start":1697015146846,"stop":1697015158506,"duration":11660}},{"uid":"10f586cf6243af8e","reportUrl":"https://javister.github.io/javister-docker-base/960//#testresult/10f586cf6243af8e","status":"passed","time":{"start":1696321805939,"stop":1696321817329,"duration":11390}},{"uid":"b74527bdebe39e28","reportUrl":"https://javister.github.io/javister-docker-base/961//#testresult/b74527bdebe39e28","status":"passed","time":{"start":1696321772401,"stop":1696321782085,"duration":9684}},{"uid":"101a9e8685720d41","reportUrl":"https://javister.github.io/javister-docker-base/957//#testresult/101a9e8685720d41","status":"passed","time":{"start":1696235498032,"stop":1696235507889,"duration":9857}},{"uid":"26d1e9e23e345a4b","reportUrl":"https://javister.github.io/javister-docker-base/955//#testresult/26d1e9e23e345a4b","status":"passed","time":{"start":1695632468931,"stop":1695632479191,"duration":10260}},{"uid":"9354c82b08472d0c","reportUrl":"https://javister.github.io/javister-docker-base/953//#testresult/9354c82b08472d0c","status":"passed","time":{"start":1695200749435,"stop":1695200759336,"duration":9901}},{"uid":"f61302802aeee977","reportUrl":"https://javister.github.io/javister-docker-base/951//#testresult/f61302802aeee977","status":"passed","time":{"start":1694421524955,"stop":1694421535330,"duration":10375}},{"uid":"1a4df3eec341e303","reportUrl":"https://javister.github.io/javister-docker-base/942//#testresult/1a4df3eec341e303","status":"passed","time":{"start":1692780141602,"stop":1692780152057,"duration":10455}}]},"tags":[]},"source":"66706f7b899b8865.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@3b80341), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@50558ae0, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=2777c976b11b, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=f3a01162-e9cc-4355-9861-182e9ce2d0b2, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-11-22T09:04:52.715506217Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=a0fa4efbaafaaf26a725e4078015f865e0282a0a2449b7466b5fe086f4cac296, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@20f06594, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@741f778a}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134/hostname, hostsPath=/var/lib/docker/containers/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134/hosts, logPath=/var/lib/docker/containers/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134-json.log, id=2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/peaceful_herschel, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=bb318fc8d55d14d1df0a8b3b26702ba164b36b220473e0ebad1e64d8bf1c5a6d, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@54b950a3, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7cdac01d}, sandboxKey=/var/run/docker/netns/bb318fc8d55d, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={c309f135-8371-484b-be2a-7a6bd28e974a=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-LKtmUcQ6, 2777c976b11b], networkID=a0fa4efbaafaaf26a725e4078015f865e0282a0a2449b7466b5fe086f4cac296, endpointId=91b1336846eeb398a38fde6ee88809f9a07dc2702cb63432a48a6d1514f1dbf8, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/2777c976b11b57f918448032504dac36fa8277e9d0ed68d1583128deceade134/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=11780, exitCode=0, error=, startedAt=2023-11-22T09:04:52.996317591Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@5f25c6d7, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@5009599e)"]}