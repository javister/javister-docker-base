{"uid":"a32df9faf4b1177a","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"eb3f9b93c813293ad7432cf68068e97f","time":{"start":1702628797579,"stop":1702628805000,"duration":7421},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"df19738b2d38502d","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-FIREFOX-20231215-082643.flv","source":"df19738b2d38502d.flv","type":"video/x-flv","size":33361}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az575-193"},{"name":"thread","value":"3607@fv-az575-193.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@64e2ca30), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@22b50aad, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=62a2156f3d01, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=52816092-b01d-45db-a9bf-d6c8514d1b0b, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-15T08:26:37.588177039Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=99d59564d2595ff714a2520b1c7b164589061acd902dcbd9e935ff96deeb7833, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@d5a070e, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4e147834}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48/hostname, hostsPath=/var/lib/docker/containers/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48/hosts, logPath=/var/lib/docker/containers/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48-json.log, id=62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/nice_feistel, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=2421c68164b1c23d4d598143d7fb7355cb430192e52008416e0872cda2bfa1ea, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@75163f7a, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@10bc32f8}, sandboxKey=/var/run/docker/netns/2421c68164b1, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={11eda392-7826-4d89-9230-f2c753c4a946=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-y9ALfK19, 62a2156f3d01], networkID=99d59564d2595ff714a2520b1c7b164589061acd902dcbd9e935ff96deeb7833, endpointId=118b76d0907cdb77a8ed24cef6a193c483ad68ca0f254215f43ed0138aa8c819, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16891, exitCode=0, error=, startedAt=2023-12-15T08:26:37.832773905Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@4d032596, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@20bb31da)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":292,"unknown":0,"total":292},"items":[{"uid":"b54d8c71af08a70e","reportUrl":"https://javister.github.io/javister-docker-base/1015//#testresult/b54d8c71af08a70e","status":"passed","time":{"start":1702545419597,"stop":1702545427329,"duration":7732}},{"uid":"cc6e7f5602c34791","reportUrl":"https://javister.github.io/javister-docker-base/1013//#testresult/cc6e7f5602c34791","status":"passed","time":{"start":1702544836127,"stop":1702544844151,"duration":8024}},{"uid":"a8a61974bdb7763e","reportUrl":"https://javister.github.io/javister-docker-base/1010//#testresult/a8a61974bdb7763e","status":"passed","time":{"start":1702283064146,"stop":1702283072289,"duration":8143}},{"uid":"d70b91c489cf341","reportUrl":"https://javister.github.io/javister-docker-base/1008//#testresult/d70b91c489cf341","status":"passed","time":{"start":1702282555294,"stop":1702282563450,"duration":8156}},{"uid":"66a40f1a8140ccd1","reportUrl":"https://javister.github.io/javister-docker-base/1005//#testresult/66a40f1a8140ccd1","status":"passed","time":{"start":1701764215638,"stop":1701764223207,"duration":7569}},{"uid":"d6d823376661982f","reportUrl":"https://javister.github.io/javister-docker-base/1003//#testresult/d6d823376661982f","status":"passed","time":{"start":1701764146936,"stop":1701764154308,"duration":7372}},{"uid":"c232f2ac94cc7967","reportUrl":"https://javister.github.io/javister-docker-base/999//#testresult/c232f2ac94cc7967","status":"passed","time":{"start":1701335378108,"stop":1701335385486,"duration":7378}},{"uid":"3d6f21b6fa94d6bc","reportUrl":"https://javister.github.io/javister-docker-base/995//#testresult/3d6f21b6fa94d6bc","status":"passed","time":{"start":1701075834280,"stop":1701075841684,"duration":7404}},{"uid":"66706f7b899b8865","reportUrl":"https://javister.github.io/javister-docker-base/993//#testresult/66706f7b899b8865","status":"passed","time":{"start":1700643892706,"stop":1700643900226,"duration":7520}},{"uid":"8b73e49cd518284d","reportUrl":"https://javister.github.io/javister-docker-base/992//#testresult/8b73e49cd518284d","status":"passed","time":{"start":1700643538087,"stop":1700643545503,"duration":7416}},{"uid":"7db434c8ce0bafbc","reportUrl":"https://javister.github.io/javister-docker-base/989//#testresult/7db434c8ce0bafbc","status":"passed","time":{"start":1700125034935,"stop":1700125042558,"duration":7623}},{"uid":"862d5418e9cae3c9","reportUrl":"https://javister.github.io/javister-docker-base/988//#testresult/862d5418e9cae3c9","status":"passed","time":{"start":1700124795081,"stop":1700124802626,"duration":7545}},{"uid":"1a387f0b744bc525","reportUrl":"https://javister.github.io/javister-docker-base/984//#testresult/1a387f0b744bc525","status":"passed","time":{"start":1699348564635,"stop":1699348572392,"duration":7757}},{"uid":"85eee1cd84f39ae1","reportUrl":"https://javister.github.io/javister-docker-base/982//#testresult/85eee1cd84f39ae1","status":"passed","time":{"start":1699348030416,"stop":1699348037860,"duration":7444}},{"uid":"6125f78f10919d9b","reportUrl":"https://javister.github.io/javister-docker-base/979//#testresult/6125f78f10919d9b","status":"passed","time":{"start":1699259969838,"stop":1699259981964,"duration":12126}},{"uid":"43e513d591f2974","reportUrl":"https://javister.github.io/javister-docker-base/977//#testresult/43e513d591f2974","status":"passed","time":{"start":1698915244297,"stop":1698915256951,"duration":12654}},{"uid":"acef143d20242bc4","reportUrl":"https://javister.github.io/javister-docker-base/975//#testresult/acef143d20242bc4","status":"passed","time":{"start":1698138531170,"stop":1698138546333,"duration":15163}},{"uid":"1a4648e04e35349d","reportUrl":"https://javister.github.io/javister-docker-base/972//#testresult/1a4648e04e35349d","status":"passed","time":{"start":1698137736224,"stop":1698137750789,"duration":14565}},{"uid":"9242eded6b092e31","reportUrl":"https://javister.github.io/javister-docker-base/973//#testresult/9242eded6b092e31","status":"passed","time":{"start":1698137629919,"stop":1698137640262,"duration":10343}},{"uid":"11bd696e35c0414f","reportUrl":"https://javister.github.io/javister-docker-base/967//#testresult/11bd696e35c0414f","status":"passed","time":{"start":1697187853562,"stop":1697187864921,"duration":11359}}]},"tags":[]},"source":"a32df9faf4b1177a.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@64e2ca30), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@22b50aad, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=62a2156f3d01, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=52816092-b01d-45db-a9bf-d6c8514d1b0b, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-15T08:26:37.588177039Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=99d59564d2595ff714a2520b1c7b164589061acd902dcbd9e935ff96deeb7833, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@d5a070e, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4e147834}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48/hostname, hostsPath=/var/lib/docker/containers/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48/hosts, logPath=/var/lib/docker/containers/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48-json.log, id=62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/nice_feistel, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=2421c68164b1c23d4d598143d7fb7355cb430192e52008416e0872cda2bfa1ea, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@75163f7a, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@10bc32f8}, sandboxKey=/var/run/docker/netns/2421c68164b1, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={11eda392-7826-4d89-9230-f2c753c4a946=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-y9ALfK19, 62a2156f3d01], networkID=99d59564d2595ff714a2520b1c7b164589061acd902dcbd9e935ff96deeb7833, endpointId=118b76d0907cdb77a8ed24cef6a193c483ad68ca0f254215f43ed0138aa8c819, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/62a2156f3d01313416676e3f54396950e6e211306f3c26db3e731a2bbea98f48/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16891, exitCode=0, error=, startedAt=2023-12-15T08:26:37.832773905Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@4d032596, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@20bb31da)"]}