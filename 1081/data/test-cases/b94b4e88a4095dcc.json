{"uid":"b94b4e88a4095dcc","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"45d41414bea5a3bec1f4595dee878e2b","time":{"start":1710405708139,"stop":1710405714097,"duration":5958},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1710405708133,"stop":1710405708136,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"7e2fa4e0c38461d0","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-CHROME-20240314-084152.flv","source":"7e2fa4e0c38461d0.flv","type":"video/x-flv","size":25024}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1149-788"},{"name":"thread","value":"3562@fv-az1149-788.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@479f74c1), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@367c090f, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=ff031a69f68a, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=fa028e8c-880a-433f-a23f-fe6a4b3910d5, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-03-14T08:41:48.149229674Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=127c354442709703ddcc0e611c76affb6101926a1efa395d8642c422fafa3470, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3e62434, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@43c6ee3f}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e/hostname, hostsPath=/var/lib/docker/containers/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e/hosts, logPath=/var/lib/docker/containers/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e-json.log, id=ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/beautiful_torvalds, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=df8e040e08fb2646db99e8ccab4caed835dc28513a35d3af47c6b78ee3d84294, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@29c3ed24, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7db852f}, sandboxKey=/var/run/docker/netns/df8e040e08fb, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={76762b35-4225-4e02-8dd5-ce5700ce4365=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-VSUoo16b, ff031a69f68a], networkID=127c354442709703ddcc0e611c76affb6101926a1efa395d8642c422fafa3470, endpointId=25a9ee1aab225a84e1a7407409bb0d090a8d912b51faf072366ea0956a0e2b43, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=9266, exitCode=0, error=, startedAt=2024-03-14T08:41:48.389125593Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@352ec664, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@41ed61e8)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":318,"unknown":0,"total":318},"items":[{"uid":"114419e114b39424","reportUrl":"https://javister.github.io/javister-docker-base/1080//#testresult/114419e114b39424","status":"passed","time":{"start":1710405496797,"stop":1710405502884,"duration":6087}},{"uid":"fd75ec797c540a52","reportUrl":"https://javister.github.io/javister-docker-base/1077//#testresult/fd75ec797c540a52","status":"passed","time":{"start":1710320074873,"stop":1710320080460,"duration":5587}},{"uid":"28f6aceebecd2816","reportUrl":"https://javister.github.io/javister-docker-base/1073//#testresult/28f6aceebecd2816","status":"passed","time":{"start":1710148317990,"stop":1710148323559,"duration":5569}},{"uid":"802895e4db3de9cf","reportUrl":"https://javister.github.io/javister-docker-base/1071//#testresult/802895e4db3de9cf","status":"passed","time":{"start":1709713955601,"stop":1709713961270,"duration":5669}},{"uid":"e4fa8b514137e7d1","reportUrl":"https://javister.github.io/javister-docker-base/1065//#testresult/e4fa8b514137e7d1","status":"passed","time":{"start":1708590941488,"stop":1708590980701,"duration":39213}},{"uid":"307a10d64dd427e8","reportUrl":"https://javister.github.io/javister-docker-base/1063//#testresult/307a10d64dd427e8","status":"passed","time":{"start":1708504060486,"stop":1708504099235,"duration":38749}},{"uid":"37fcfbf6cc503933","reportUrl":"https://javister.github.io/javister-docker-base/1060//#testresult/37fcfbf6cc503933","status":"passed","time":{"start":1707900717511,"stop":1707900753455,"duration":35944}},{"uid":"837c2510f7897544","reportUrl":"https://javister.github.io/javister-docker-base/1058//#testresult/837c2510f7897544","status":"passed","time":{"start":1707726278474,"stop":1707726314698,"duration":36224}},{"uid":"4f1084db99f19a03","reportUrl":"https://javister.github.io/javister-docker-base/1056//#testresult/4f1084db99f19a03","status":"passed","time":{"start":1707466515474,"stop":1707466554315,"duration":38841}},{"uid":"6075e67faa6d4a36","reportUrl":"https://javister.github.io/javister-docker-base/1055//#testresult/6075e67faa6d4a36","status":"passed","time":{"start":1707466306552,"stop":1707466343511,"duration":36959}},{"uid":"768833e460d40ea0","reportUrl":"https://javister.github.io/javister-docker-base/1052//#testresult/768833e460d40ea0","status":"passed","time":{"start":1707208974467,"stop":1707209010357,"duration":35890}},{"uid":"4afb1a93f8a8faa","reportUrl":"https://javister.github.io/javister-docker-base/1050//#testresult/4afb1a93f8a8faa","status":"passed","time":{"start":1707124145495,"stop":1707124182356,"duration":36861}},{"uid":"813510df1549efb1","reportUrl":"https://javister.github.io/javister-docker-base/1048//#testresult/813510df1549efb1","status":"passed","time":{"start":1706260276154,"stop":1706260281855,"duration":5701}},{"uid":"38f3b8c44bc661bd","reportUrl":"https://javister.github.io/javister-docker-base/1046//#testresult/38f3b8c44bc661bd","status":"passed","time":{"start":1705566406789,"stop":1705566443447,"duration":36658}},{"uid":"7eb22c84fa3e2cf4","reportUrl":"https://javister.github.io/javister-docker-base/1044//#testresult/7eb22c84fa3e2cf4","status":"passed","time":{"start":1705308530278,"stop":1705308566205,"duration":35927}},{"uid":"a6ffca70f1b8f9d7","reportUrl":"https://javister.github.io/javister-docker-base/1042//#testresult/a6ffca70f1b8f9d7","status":"passed","time":{"start":1704876937193,"stop":1704876973930,"duration":36737}},{"uid":"77d756584a11bc38","reportUrl":"https://javister.github.io/javister-docker-base/1040//#testresult/77d756584a11bc38","status":"passed","time":{"start":1704876460552,"stop":1704876499673,"duration":39121}},{"uid":"b7170f55e174db1","reportUrl":"https://javister.github.io/javister-docker-base/1037//#testresult/b7170f55e174db1","status":"passed","time":{"start":1704788167608,"stop":1704788203813,"duration":36205}},{"uid":"623a41cec26bc55f","reportUrl":"https://javister.github.io/javister-docker-base/1034//#testresult/623a41cec26bc55f","status":"passed","time":{"start":1703839790783,"stop":1703839826880,"duration":36097}},{"uid":"fbb5c1a75cf71d5e","reportUrl":"https://javister.github.io/javister-docker-base/1032//#testresult/fbb5c1a75cf71d5e","status":"passed","time":{"start":1703494375339,"stop":1703494413037,"duration":37698}}]},"tags":[]},"source":"b94b4e88a4095dcc.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@479f74c1), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@367c090f, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=ff031a69f68a, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=fa028e8c-880a-433f-a23f-fe6a4b3910d5, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-03-14T08:41:48.149229674Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=127c354442709703ddcc0e611c76affb6101926a1efa395d8642c422fafa3470, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3e62434, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@43c6ee3f}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e/hostname, hostsPath=/var/lib/docker/containers/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e/hosts, logPath=/var/lib/docker/containers/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e-json.log, id=ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/beautiful_torvalds, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=df8e040e08fb2646db99e8ccab4caed835dc28513a35d3af47c6b78ee3d84294, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@29c3ed24, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7db852f}, sandboxKey=/var/run/docker/netns/df8e040e08fb, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={76762b35-4225-4e02-8dd5-ce5700ce4365=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-VSUoo16b, ff031a69f68a], networkID=127c354442709703ddcc0e611c76affb6101926a1efa395d8642c422fafa3470, endpointId=25a9ee1aab225a84e1a7407409bb0d090a8d912b51faf072366ea0956a0e2b43, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/ff031a69f68a55d335a8e2a0e5afb62bcb86ac420e6d2b58b9e92329bb2a739e/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=9266, exitCode=0, error=, startedAt=2024-03-14T08:41:48.389125593Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@352ec664, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@41ed61e8)"]}