{"uid":"1dd006846d25bf17","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"eb3f9b93c813293ad7432cf68068e97f","time":{"start":1709713896404,"stop":1709713903632,"duration":7228},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"61ac368c45bf6d88","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-FIREFOX-20240306-083141.flv","source":"61ac368c45bf6d88.flv","type":"video/x-flv","size":36353}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az888-263"},{"name":"thread","value":"3559@fv-az888-263.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@35b50ce7), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@56ae1148, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=8ce9d7daca46, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=ec42305c-975f-456b-afc8-35624afe4045, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-03-06T08:31:36.411970007Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=3a805b2c6f481ebfc39f272c14e9aa0597949979ffe0993538e5e099efbca439, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@b46ad6c, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7cd198d9}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b/hostname, hostsPath=/var/lib/docker/containers/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b/hosts, logPath=/var/lib/docker/containers/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b-json.log, id=8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/sweet_bardeen, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=3d116ea57becd4de5ca80ae6ff4658c6e284cb5dbabf7ccc22015d19e3ed93f0, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3c780410, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@496f4a3b}, sandboxKey=/var/run/docker/netns/3d116ea57bec, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={289160f7-0441-4c4c-97a3-d38b980e801b=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-dd54oB2A, 8ce9d7daca46], networkID=3a805b2c6f481ebfc39f272c14e9aa0597949979ffe0993538e5e099efbca439, endpointId=69e828d227d86fc52471092081e6abd328c23d69c1d4881079d9228b8749a3fb, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=12585, exitCode=0, error=, startedAt=2024-03-06T08:31:36.630412059Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@777ca3b7, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@71bead1)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":314,"unknown":0,"total":314},"items":[{"uid":"69e08882937b342c","reportUrl":"https://javister.github.io/javister-docker-base/1065//#testresult/69e08882937b342c","status":"passed","time":{"start":1708591056151,"stop":1708591063479,"duration":7328}},{"uid":"8a5bd80b67561270","reportUrl":"https://javister.github.io/javister-docker-base/1063//#testresult/8a5bd80b67561270","status":"passed","time":{"start":1708504175249,"stop":1708504182589,"duration":7340}},{"uid":"20eb8d99d8de365f","reportUrl":"https://javister.github.io/javister-docker-base/1060//#testresult/20eb8d99d8de365f","status":"passed","time":{"start":1707900827776,"stop":1707900835076,"duration":7300}},{"uid":"fb60c85871da526a","reportUrl":"https://javister.github.io/javister-docker-base/1058//#testresult/fb60c85871da526a","status":"passed","time":{"start":1707726464424,"stop":1707726471931,"duration":7507}},{"uid":"9029869c526790b8","reportUrl":"https://javister.github.io/javister-docker-base/1056//#testresult/9029869c526790b8","status":"passed","time":{"start":1707466704346,"stop":1707466711610,"duration":7264}},{"uid":"6c3cc03d6ce64f0","reportUrl":"https://javister.github.io/javister-docker-base/1055//#testresult/6c3cc03d6ce64f0","status":"passed","time":{"start":1707466495009,"stop":1707466502400,"duration":7391}},{"uid":"40a563894e837365","reportUrl":"https://javister.github.io/javister-docker-base/1052//#testresult/40a563894e837365","status":"passed","time":{"start":1707209141084,"stop":1707209148368,"duration":7284}},{"uid":"d49abd2547332421","reportUrl":"https://javister.github.io/javister-docker-base/1050//#testresult/d49abd2547332421","status":"passed","time":{"start":1707124316819,"stop":1707124324525,"duration":7706}},{"uid":"54f1167c9e7d7789","reportUrl":"https://javister.github.io/javister-docker-base/1048//#testresult/54f1167c9e7d7789","status":"passed","time":{"start":1706260216766,"stop":1706260224218,"duration":7452}},{"uid":"a02ba54de72f66c1","reportUrl":"https://javister.github.io/javister-docker-base/1046//#testresult/a02ba54de72f66c1","status":"passed","time":{"start":1705566556450,"stop":1705566563791,"duration":7341}},{"uid":"8fc10a4b6bdf7f98","reportUrl":"https://javister.github.io/javister-docker-base/1044//#testresult/8fc10a4b6bdf7f98","status":"passed","time":{"start":1705308678403,"stop":1705308685705,"duration":7302}},{"uid":"391f59d3a8085c1f","reportUrl":"https://javister.github.io/javister-docker-base/1042//#testresult/391f59d3a8085c1f","status":"passed","time":{"start":1704877088464,"stop":1704877095943,"duration":7479}},{"uid":"d7d826b7664cd07f","reportUrl":"https://javister.github.io/javister-docker-base/1040//#testresult/d7d826b7664cd07f","status":"passed","time":{"start":1704876615555,"stop":1704876623125,"duration":7570}},{"uid":"1e642618ba1ebb6d","reportUrl":"https://javister.github.io/javister-docker-base/1037//#testresult/1e642618ba1ebb6d","status":"passed","time":{"start":1704788315787,"stop":1704788323051,"duration":7264}},{"uid":"bbec0385d982429f","reportUrl":"https://javister.github.io/javister-docker-base/1034//#testresult/bbec0385d982429f","status":"passed","time":{"start":1703839939242,"stop":1703839946528,"duration":7286}},{"uid":"84649378485c2d9e","reportUrl":"https://javister.github.io/javister-docker-base/1032//#testresult/84649378485c2d9e","status":"passed","time":{"start":1703494526539,"stop":1703494533830,"duration":7291}},{"uid":"497dd5a13d47e128","reportUrl":"https://javister.github.io/javister-docker-base/1031//#testresult/497dd5a13d47e128","status":"passed","time":{"start":1703494237244,"stop":1703494244451,"duration":7207}},{"uid":"3f46dc4a89a7ecf7","reportUrl":"https://javister.github.io/javister-docker-base/1027//#testresult/3f46dc4a89a7ecf7","status":"passed","time":{"start":1702976742834,"stop":1702976750105,"duration":7271}},{"uid":"e5082874a186e72a","reportUrl":"https://javister.github.io/javister-docker-base/1028//#testresult/e5082874a186e72a","status":"passed","time":{"start":1702976652720,"stop":1702976660056,"duration":7336}},{"uid":"d26e791964f43eb1","reportUrl":"https://javister.github.io/javister-docker-base/1023//#testresult/d26e791964f43eb1","status":"passed","time":{"start":1702889197025,"stop":1702889204319,"duration":7294}}]},"tags":[]},"source":"1dd006846d25bf17.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@35b50ce7), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@56ae1148, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=8ce9d7daca46, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=ec42305c-975f-456b-afc8-35624afe4045, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-03-06T08:31:36.411970007Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=3a805b2c6f481ebfc39f272c14e9aa0597949979ffe0993538e5e099efbca439, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@b46ad6c, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7cd198d9}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b/hostname, hostsPath=/var/lib/docker/containers/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b/hosts, logPath=/var/lib/docker/containers/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b-json.log, id=8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/sweet_bardeen, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=3d116ea57becd4de5ca80ae6ff4658c6e284cb5dbabf7ccc22015d19e3ed93f0, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3c780410, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@496f4a3b}, sandboxKey=/var/run/docker/netns/3d116ea57bec, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={289160f7-0441-4c4c-97a3-d38b980e801b=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-dd54oB2A, 8ce9d7daca46], networkID=3a805b2c6f481ebfc39f272c14e9aa0597949979ffe0993538e5e099efbca439, endpointId=69e828d227d86fc52471092081e6abd328c23d69c1d4881079d9228b8749a3fb, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/8ce9d7daca46bff9f6ffcf06faf72e04899f8218b92d7d4c10b9fc7fa3817b1b/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=12585, exitCode=0, error=, startedAt=2024-03-06T08:31:36.630412059Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@777ca3b7, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@71bead1)"]}