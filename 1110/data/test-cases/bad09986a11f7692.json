{"uid":"bad09986a11f7692","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"eb3f9b93c813293ad7432cf68068e97f","time":{"start":1714379139784,"stop":1714379147253,"duration":7469},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"a89decc97dea9a89","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-FIREFOX-20240429-082545.flv","source":"a89decc97dea9a89.flv","type":"video/x-flv","size":32596}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az1019-750"},{"name":"thread","value":"3523@fv-az1019-750.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@327338e), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@44647027, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=c7cb257c5cc0, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=161b9e6d-915b-4ed7-86eb-a1df8e004f98, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-04-29T08:25:39.791702569Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=51061950b926395fed06b81c4efb94b834d46207d6bf24068bb6dcd90695467e, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7db91da7, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@17337c67}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7/hostname, hostsPath=/var/lib/docker/containers/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7/hosts, logPath=/var/lib/docker/containers/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7-json.log, id=c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/vibrant_brown, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=16a536ae36aa0a7a0e4f837f3553bda71b33ce03ab3b516db534853864226afe, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@2ed1ac57, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@659e377d}, sandboxKey=/var/run/docker/netns/16a536ae36aa, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={963cd706-795d-4ae2-a567-b9788bebac36=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-oxTFcazs, c7cb257c5cc0], networkID=51061950b926395fed06b81c4efb94b834d46207d6bf24068bb6dcd90695467e, endpointId=b4f3e2855401e204418d6e859f7612667c12450a0a0da7c721adaaab506e2e1f, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=9899, exitCode=0, error=, startedAt=2024-04-29T08:25:40.016407912Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@50ff5a4c, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@5c23d470)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":329,"unknown":0,"total":329},"items":[{"uid":"383869fdcfecb760","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/383869fdcfecb760","status":"passed","time":{"start":1713948304762,"stop":1713948312027,"duration":7265}},{"uid":"f96e2fa7215a2207","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/f96e2fa7215a2207","status":"passed","time":{"start":1713774269374,"stop":1713774276686,"duration":7312}},{"uid":"c471f29f613c9e49","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/c471f29f613c9e49","status":"passed","time":{"start":1713169361506,"stop":1713169369036,"duration":7530}},{"uid":"a096591fd9d795dc","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/a096591fd9d795dc","status":"passed","time":{"start":1713169023520,"stop":1713169030844,"duration":7324}},{"uid":"6fa9f1a4a989ee7a","reportUrl":"https://javister.github.io/javister-docker-base/1096//#testresult/6fa9f1a4a989ee7a","status":"passed","time":{"start":1712653634051,"stop":1712653641751,"duration":7700}},{"uid":"10a08b26925eef8a","reportUrl":"https://javister.github.io/javister-docker-base/1093//#testresult/10a08b26925eef8a","status":"passed","time":{"start":1712652799383,"stop":1712652806969,"duration":7586}},{"uid":"8044d7e920a24eef","reportUrl":"https://javister.github.io/javister-docker-base/1090//#testresult/8044d7e920a24eef","status":"passed","time":{"start":1711358058161,"stop":1711358067017,"duration":8856}},{"uid":"aadb18ea9f9a0efb","reportUrl":"https://javister.github.io/javister-docker-base/1088//#testresult/aadb18ea9f9a0efb","status":"passed","time":{"start":1710924220102,"stop":1710924227546,"duration":7444}},{"uid":"db1ab1476d392f0","reportUrl":"https://javister.github.io/javister-docker-base/1085//#testresult/db1ab1476d392f0","status":"passed","time":{"start":1710837912302,"stop":1710837919513,"duration":7211}},{"uid":"1a4cf42b998d80d6","reportUrl":"https://javister.github.io/javister-docker-base/1084//#testresult/1a4cf42b998d80d6","status":"passed","time":{"start":1710837870270,"stop":1710837877618,"duration":7348}},{"uid":"2fcfc853977368ca","reportUrl":"https://javister.github.io/javister-docker-base/1081//#testresult/2fcfc853977368ca","status":"passed","time":{"start":1710405796016,"stop":1710405803344,"duration":7328}},{"uid":"17c3d37e018e3967","reportUrl":"https://javister.github.io/javister-docker-base/1080//#testresult/17c3d37e018e3967","status":"passed","time":{"start":1710405584805,"stop":1710405592214,"duration":7409}},{"uid":"5c6bc64348573ea0","reportUrl":"https://javister.github.io/javister-docker-base/1077//#testresult/5c6bc64348573ea0","status":"passed","time":{"start":1710320016501,"stop":1710320023726,"duration":7225}},{"uid":"aaebdb679683638e","reportUrl":"https://javister.github.io/javister-docker-base/1073//#testresult/aaebdb679683638e","status":"passed","time":{"start":1710148258937,"stop":1710148266221,"duration":7284}},{"uid":"1dd006846d25bf17","reportUrl":"https://javister.github.io/javister-docker-base/1071//#testresult/1dd006846d25bf17","status":"passed","time":{"start":1709713896404,"stop":1709713903632,"duration":7228}},{"uid":"69e08882937b342c","reportUrl":"https://javister.github.io/javister-docker-base/1065//#testresult/69e08882937b342c","status":"passed","time":{"start":1708591056151,"stop":1708591063479,"duration":7328}},{"uid":"8a5bd80b67561270","reportUrl":"https://javister.github.io/javister-docker-base/1063//#testresult/8a5bd80b67561270","status":"passed","time":{"start":1708504175249,"stop":1708504182589,"duration":7340}},{"uid":"20eb8d99d8de365f","reportUrl":"https://javister.github.io/javister-docker-base/1060//#testresult/20eb8d99d8de365f","status":"passed","time":{"start":1707900827776,"stop":1707900835076,"duration":7300}},{"uid":"fb60c85871da526a","reportUrl":"https://javister.github.io/javister-docker-base/1058//#testresult/fb60c85871da526a","status":"passed","time":{"start":1707726464424,"stop":1707726471931,"duration":7507}},{"uid":"9029869c526790b8","reportUrl":"https://javister.github.io/javister-docker-base/1056//#testresult/9029869c526790b8","status":"passed","time":{"start":1707466704346,"stop":1707466711610,"duration":7264}}]},"tags":[]},"source":"bad09986a11f7692.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@327338e), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@44647027, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=c7cb257c5cc0, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=161b9e6d-915b-4ed7-86eb-a1df8e004f98, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-04-29T08:25:39.791702569Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=51061950b926395fed06b81c4efb94b834d46207d6bf24068bb6dcd90695467e, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@7db91da7, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@17337c67}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7/hostname, hostsPath=/var/lib/docker/containers/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7/hosts, logPath=/var/lib/docker/containers/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7-json.log, id=c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/vibrant_brown, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=16a536ae36aa0a7a0e4f837f3553bda71b33ce03ab3b516db534853864226afe, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@2ed1ac57, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@659e377d}, sandboxKey=/var/run/docker/netns/16a536ae36aa, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={963cd706-795d-4ae2-a567-b9788bebac36=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-oxTFcazs, c7cb257c5cc0], networkID=51061950b926395fed06b81c4efb94b834d46207d6bf24068bb6dcd90695467e, endpointId=b4f3e2855401e204418d6e859f7612667c12450a0a0da7c721adaaab506e2e1f, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/c7cb257c5cc0fbd96f82edcfa4b9ae305b2b1b9bcc66c8bd4c01e293eb73fef7/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=9899, exitCode=0, error=, startedAt=2024-04-29T08:25:40.016407912Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@50ff5a4c, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@5c23d470)"]}