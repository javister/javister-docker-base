{"uid":"52021374d985f08f","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"45d41414bea5a3bec1f4595dee878e2b","time":{"start":1714379199448,"stop":1714379205148,"duration":5700},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1714379199443,"stop":1714379199445,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"c62ebc170aa3e4ec","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-CHROME-20240429-082643.flv","source":"c62ebc170aa3e4ec.flv","type":"video/x-flv","size":23998}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1019-750"},{"name":"thread","value":"3523@fv-az1019-750.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@327338e), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@71816d6f, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=581c053615bc, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=161b9e6d-915b-4ed7-86eb-a1df8e004f98, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-04-29T08:26:39.456585636Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=51061950b926395fed06b81c4efb94b834d46207d6bf24068bb6dcd90695467e, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@57e9585c, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5a73119d}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32/hostname, hostsPath=/var/lib/docker/containers/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32/hosts, logPath=/var/lib/docker/containers/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32-json.log, id=581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/xenodochial_fermi, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=93dc55719d0a36e0df7028a700f2d5a7c917f99d58ca710ad68c995283cf5517, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@75243954, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@275bc9d1}, sandboxKey=/var/run/docker/netns/93dc55719d0a, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={963cd706-795d-4ae2-a567-b9788bebac36=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-5MN3Ryzq, 581c053615bc], networkID=51061950b926395fed06b81c4efb94b834d46207d6bf24068bb6dcd90695467e, endpointId=ebe7509f3c35a57c30b2aaf6fd90df03b6f1b9c5006527e605cc14186d478065, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=15667, exitCode=0, error=, startedAt=2024-04-29T08:26:39.714130509Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@3aed4ede, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@78d04fe7)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":329,"unknown":0,"total":329},"items":[{"uid":"f9680bf731d2fb91","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/f9680bf731d2fb91","status":"passed","time":{"start":1713948363900,"stop":1713948369609,"duration":5709}},{"uid":"39f7cf4c92c8e49a","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/39f7cf4c92c8e49a","status":"passed","time":{"start":1713774328601,"stop":1713774334323,"duration":5722}},{"uid":"b89ef59f8c4bf48a","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/b89ef59f8c4bf48a","status":"passed","time":{"start":1713169289678,"stop":1713169295492,"duration":5814}},{"uid":"602b13ff51094f6b","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/602b13ff51094f6b","status":"passed","time":{"start":1713168953191,"stop":1713168958871,"duration":5680}},{"uid":"4d1f89a0ac0c54d9","reportUrl":"https://javister.github.io/javister-docker-base/1096//#testresult/4d1f89a0ac0c54d9","status":"passed","time":{"start":1712653560269,"stop":1712653566281,"duration":6012}},{"uid":"ead603260a3954fd","reportUrl":"https://javister.github.io/javister-docker-base/1093//#testresult/ead603260a3954fd","status":"passed","time":{"start":1712652726800,"stop":1712652732635,"duration":5835}},{"uid":"d6c45de30df4b8cb","reportUrl":"https://javister.github.io/javister-docker-base/1090//#testresult/d6c45de30df4b8cb","status":"passed","time":{"start":1711357969939,"stop":1711357976110,"duration":6171}},{"uid":"26095b611197c7ab","reportUrl":"https://javister.github.io/javister-docker-base/1088//#testresult/26095b611197c7ab","status":"passed","time":{"start":1710924131455,"stop":1710924137561,"duration":6106}},{"uid":"3c14dd4503ce295d","reportUrl":"https://javister.github.io/javister-docker-base/1085//#testresult/3c14dd4503ce295d","status":"passed","time":{"start":1710837825686,"stop":1710837831734,"duration":6048}},{"uid":"fa126968e15fcc11","reportUrl":"https://javister.github.io/javister-docker-base/1084//#testresult/fa126968e15fcc11","status":"passed","time":{"start":1710837780660,"stop":1710837786894,"duration":6234}},{"uid":"b94b4e88a4095dcc","reportUrl":"https://javister.github.io/javister-docker-base/1081//#testresult/b94b4e88a4095dcc","status":"passed","time":{"start":1710405708139,"stop":1710405714097,"duration":5958}},{"uid":"114419e114b39424","reportUrl":"https://javister.github.io/javister-docker-base/1080//#testresult/114419e114b39424","status":"passed","time":{"start":1710405496797,"stop":1710405502884,"duration":6087}},{"uid":"fd75ec797c540a52","reportUrl":"https://javister.github.io/javister-docker-base/1077//#testresult/fd75ec797c540a52","status":"passed","time":{"start":1710320074873,"stop":1710320080460,"duration":5587}},{"uid":"28f6aceebecd2816","reportUrl":"https://javister.github.io/javister-docker-base/1073//#testresult/28f6aceebecd2816","status":"passed","time":{"start":1710148317990,"stop":1710148323559,"duration":5569}},{"uid":"802895e4db3de9cf","reportUrl":"https://javister.github.io/javister-docker-base/1071//#testresult/802895e4db3de9cf","status":"passed","time":{"start":1709713955601,"stop":1709713961270,"duration":5669}},{"uid":"e4fa8b514137e7d1","reportUrl":"https://javister.github.io/javister-docker-base/1065//#testresult/e4fa8b514137e7d1","status":"passed","time":{"start":1708590941488,"stop":1708590980701,"duration":39213}},{"uid":"307a10d64dd427e8","reportUrl":"https://javister.github.io/javister-docker-base/1063//#testresult/307a10d64dd427e8","status":"passed","time":{"start":1708504060486,"stop":1708504099235,"duration":38749}},{"uid":"37fcfbf6cc503933","reportUrl":"https://javister.github.io/javister-docker-base/1060//#testresult/37fcfbf6cc503933","status":"passed","time":{"start":1707900717511,"stop":1707900753455,"duration":35944}},{"uid":"837c2510f7897544","reportUrl":"https://javister.github.io/javister-docker-base/1058//#testresult/837c2510f7897544","status":"passed","time":{"start":1707726278474,"stop":1707726314698,"duration":36224}},{"uid":"4f1084db99f19a03","reportUrl":"https://javister.github.io/javister-docker-base/1056//#testresult/4f1084db99f19a03","status":"passed","time":{"start":1707466515474,"stop":1707466554315,"duration":38841}}]},"tags":[]},"source":"52021374d985f08f.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@327338e), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@71816d6f, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=581c053615bc, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=161b9e6d-915b-4ed7-86eb-a1df8e004f98, org.testcontainers.version=1.19.7}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-04-29T08:26:39.456585636Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=51061950b926395fed06b81c4efb94b834d46207d6bf24068bb6dcd90695467e, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@57e9585c, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5a73119d}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32/hostname, hostsPath=/var/lib/docker/containers/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32/hosts, logPath=/var/lib/docker/containers/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32-json.log, id=581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/xenodochial_fermi, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=93dc55719d0a36e0df7028a700f2d5a7c917f99d58ca710ad68c995283cf5517, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@75243954, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@275bc9d1}, sandboxKey=/var/run/docker/netns/93dc55719d0a, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={963cd706-795d-4ae2-a567-b9788bebac36=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-5MN3Ryzq, 581c053615bc], networkID=51061950b926395fed06b81c4efb94b834d46207d6bf24068bb6dcd90695467e, endpointId=ebe7509f3c35a57c30b2aaf6fd90df03b6f1b9c5006527e605cc14186d478065, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/581c053615bc3e0625f95d931181fd36522676763b194753b27a17840b7b0e32/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=15667, exitCode=0, error=, startedAt=2024-04-29T08:26:39.714130509Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@3aed4ede, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@78d04fe7)"]}