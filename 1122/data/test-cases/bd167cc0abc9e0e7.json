{"uid":"bd167cc0abc9e0e7","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"489f578e8a5a0be5bbaabec9eeb68262","time":{"start":1715589542601,"stop":1715589550087,"duration":7486},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1715589536814,"stop":1715589536815,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"91824b794f009323","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-FIREFOX-20240513-083908.flv","source":"91824b794f009323.flv","type":"video/x-flv","size":33297}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az1118-100"},{"name":"thread","value":"3563@fv-az1118-100.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@6a8aab96), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@1d4670c3, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=f0a5913c43e8, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=6e8dcaa3-1be7-43d8-9fd3-f243b952d49c, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-05-13T08:39:02.611700478Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=3c642db020445e40b364c87751af462e18005fff4909da667af4bfdf2200f496, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3fb869ca, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@112a0c43}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b/hostname, hostsPath=/var/lib/docker/containers/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b/hosts, logPath=/var/lib/docker/containers/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b-json.log, id=f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/sleepy_austin, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=31efd6f0cf06cf5b753deb266c0f8d52d46f843825ddd1d8f6dbc2364ac85650, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@6ef8b1a6, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4a7d5329}, sandboxKey=/var/run/docker/netns/31efd6f0cf06, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={fcc75390-3e4b-4df7-a436-4309f64a9ab8=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-UX83nkFe, f0a5913c43e8], networkID=3c642db020445e40b364c87751af462e18005fff4909da667af4bfdf2200f496, endpointId=f6717869da4387926aff63fc7fc3ac2e4ac9f338d394689d265d0ea8f1aa5e12, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16399, exitCode=0, error=, startedAt=2024-05-13T08:39:02.849278256Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@36779595, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@77fedf0c)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":335,"unknown":0,"total":335},"items":[{"uid":"54a9e4f17692b4f3","reportUrl":"https://javister.github.io/javister-docker-base/1120//#testresult/54a9e4f17692b4f3","status":"passed","time":{"start":1715245233946,"stop":1715245241760,"duration":7814}},{"uid":"8516b814a0dfdab1","reportUrl":"https://javister.github.io/javister-docker-base/1118//#testresult/8516b814a0dfdab1","status":"passed","time":{"start":1714986384247,"stop":1714986391251,"duration":7004}},{"uid":"2e5813d7dc570d69","reportUrl":"https://javister.github.io/javister-docker-base/1116//#testresult/2e5813d7dc570d69","status":"passed","time":{"start":1714727045727,"stop":1714727053218,"duration":7491}},{"uid":"dc08d25aac6ac60c","reportUrl":"https://javister.github.io/javister-docker-base/1113//#testresult/dc08d25aac6ac60c","status":"passed","time":{"start":1714639895704,"stop":1714639903103,"duration":7399}},{"uid":"c36beb8500baf3b0","reportUrl":"https://javister.github.io/javister-docker-base/1111//#testresult/c36beb8500baf3b0","status":"passed","time":{"start":1714379504573,"stop":1714379511916,"duration":7343}},{"uid":"8d4ba4e382c527ef","reportUrl":"https://javister.github.io/javister-docker-base/1110//#testresult/8d4ba4e382c527ef","status":"passed","time":{"start":1714379205150,"stop":1714379212335,"duration":7185}},{"uid":"c8afa564093c748d","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/c8afa564093c748d","status":"passed","time":{"start":1713948369611,"stop":1713948376883,"duration":7272}},{"uid":"ef3ce522ded336b8","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/ef3ce522ded336b8","status":"passed","time":{"start":1713774334327,"stop":1713774341678,"duration":7351}},{"uid":"60e1008c123a032b","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/60e1008c123a032b","status":"passed","time":{"start":1713169295496,"stop":1713169303082,"duration":7586}},{"uid":"69c715ecadc6c4a5","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/69c715ecadc6c4a5","status":"passed","time":{"start":1713168958875,"stop":1713168966243,"duration":7368}},{"uid":"ab533b8d5d15d10","reportUrl":"https://javister.github.io/javister-docker-base/1096//#testresult/ab533b8d5d15d10","status":"passed","time":{"start":1712653566284,"stop":1712653573965,"duration":7681}},{"uid":"20cb42d01fc60a94","reportUrl":"https://javister.github.io/javister-docker-base/1093//#testresult/20cb42d01fc60a94","status":"passed","time":{"start":1712652732639,"stop":1712652740143,"duration":7504}},{"uid":"7bf98e2ea19f11f2","reportUrl":"https://javister.github.io/javister-docker-base/1090//#testresult/7bf98e2ea19f11f2","status":"passed","time":{"start":1711357976114,"stop":1711357983960,"duration":7846}},{"uid":"a62351636e1be371","reportUrl":"https://javister.github.io/javister-docker-base/1088//#testresult/a62351636e1be371","status":"passed","time":{"start":1710924137564,"stop":1710924145176,"duration":7612}},{"uid":"cd7e922e54c4cab4","reportUrl":"https://javister.github.io/javister-docker-base/1085//#testresult/cd7e922e54c4cab4","status":"passed","time":{"start":1710837831738,"stop":1710837839163,"duration":7425}},{"uid":"3a2ab0c51f55522e","reportUrl":"https://javister.github.io/javister-docker-base/1084//#testresult/3a2ab0c51f55522e","status":"passed","time":{"start":1710837786897,"stop":1710837794811,"duration":7914}},{"uid":"faf2615847c65596","reportUrl":"https://javister.github.io/javister-docker-base/1081//#testresult/faf2615847c65596","status":"passed","time":{"start":1710405714104,"stop":1710405722067,"duration":7963}},{"uid":"b888b69728fa86b2","reportUrl":"https://javister.github.io/javister-docker-base/1080//#testresult/b888b69728fa86b2","status":"passed","time":{"start":1710405502887,"stop":1710405510685,"duration":7798}},{"uid":"346de60d3f3789fd","reportUrl":"https://javister.github.io/javister-docker-base/1077//#testresult/346de60d3f3789fd","status":"passed","time":{"start":1710320080463,"stop":1710320087727,"duration":7264}},{"uid":"7bef54a7de9ac562","reportUrl":"https://javister.github.io/javister-docker-base/1073//#testresult/7bef54a7de9ac562","status":"passed","time":{"start":1710148323561,"stop":1710148330949,"duration":7388}}]},"tags":[]},"source":"bd167cc0abc9e0e7.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@6a8aab96), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@1d4670c3, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=f0a5913c43e8, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=6e8dcaa3-1be7-43d8-9fd3-f243b952d49c, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-05-13T08:39:02.611700478Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=3c642db020445e40b364c87751af462e18005fff4909da667af4bfdf2200f496, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3fb869ca, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@112a0c43}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b/hostname, hostsPath=/var/lib/docker/containers/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b/hosts, logPath=/var/lib/docker/containers/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b-json.log, id=f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/sleepy_austin, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=31efd6f0cf06cf5b753deb266c0f8d52d46f843825ddd1d8f6dbc2364ac85650, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@6ef8b1a6, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4a7d5329}, sandboxKey=/var/run/docker/netns/31efd6f0cf06, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={fcc75390-3e4b-4df7-a436-4309f64a9ab8=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-UX83nkFe, f0a5913c43e8], networkID=3c642db020445e40b364c87751af462e18005fff4909da667af4bfdf2200f496, endpointId=f6717869da4387926aff63fc7fc3ac2e4ac9f338d394689d265d0ea8f1aa5e12, gateway=172.18.0.1, ipAddress=172.18.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:12:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/f0a5913c43e84216f09d6b9a7a515a8508b264b5b18f3021ad4e1bbdb313530b/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16399, exitCode=0, error=, startedAt=2024-05-13T08:39:02.849278256Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@36779595, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@77fedf0c)"]}