{"uid":"5253b0a73241ac34","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"eb3f9b93c813293ad7432cf68068e97f","time":{"start":1718871738162,"stop":1718871745998,"duration":7836},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"dde63d513ede25c1","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-FIREFOX-20240620-082223.flv","source":"dde63d513ede25c1.flv","type":"video/x-flv","size":33840}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az775-371"},{"name":"thread","value":"3659@fv-az775-371.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@ce71c9e), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@51c608ba, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=b103a533ed01, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=be48f841-41c6-4dbd-ae1d-0f0fdefade76, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-06-20T08:22:18.175610338Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=959aab3c06bb6b9c8bfee10cd075d68577424585b8b174f5ddca73726cf60a08, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@2ed16bf7, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4c64c1bb}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875/hostname, hostsPath=/var/lib/docker/containers/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875/hosts, logPath=/var/lib/docker/containers/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875-json.log, id=b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/strange_mccarthy, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=3cd920ab7c2308d19b806f48c2e34b84377ff620b9bdf36b4ac68b0690a0f4e2, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5c754952, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3f0bd07c}, sandboxKey=/var/run/docker/netns/3cd920ab7c23, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={1b93bd91-e9df-4664-aa5d-ce57b9dad656=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-E7MdENqa, b103a533ed01], networkID=959aab3c06bb6b9c8bfee10cd075d68577424585b8b174f5ddca73726cf60a08, endpointId=b4bd8178255bf07154869b4d8ee02aa23e68fea19df4e7e43b9d668b617cafad, gateway=172.21.0.1, ipAddress=172.21.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:15:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=8087, exitCode=0, error=, startedAt=2024-06-20T08:22:18.422456001Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@1aa08ab9, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@70a3f94f)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":343,"unknown":0,"total":343},"items":[{"uid":"201d22fe3951721d","reportUrl":"https://javister.github.io/javister-docker-base/1144//#testresult/201d22fe3951721d","status":"passed","time":{"start":1718613387589,"stop":1718613395552,"duration":7963}},{"uid":"91eb68b78484311e","reportUrl":"https://javister.github.io/javister-docker-base/1142//#testresult/91eb68b78484311e","status":"passed","time":{"start":1718612879337,"stop":1718612887545,"duration":8208}},{"uid":"de6ec50280e72fc1","reportUrl":"https://javister.github.io/javister-docker-base/1139//#testresult/de6ec50280e72fc1","status":"passed","time":{"start":1718269696783,"stop":1718269704844,"duration":8061}},{"uid":"59ec2cfd6a0211ec","reportUrl":"https://javister.github.io/javister-docker-base/1135//#testresult/59ec2cfd6a0211ec","status":"passed","time":{"start":1717489597435,"stop":1717489605595,"duration":8160}},{"uid":"bbe65bee5f6a7d4e","reportUrl":"https://javister.github.io/javister-docker-base/1132//#testresult/bbe65bee5f6a7d4e","status":"passed","time":{"start":1717404906855,"stop":1717404914949,"duration":8094}},{"uid":"7f9e7bee18538193","reportUrl":"https://javister.github.io/javister-docker-base/1129//#testresult/7f9e7bee18538193","status":"passed","time":{"start":1717059114091,"stop":1717059122045,"duration":7954}},{"uid":"cf455a040502c0c9","reportUrl":"https://javister.github.io/javister-docker-base/1125//#testresult/cf455a040502c0c9","status":"passed","time":{"start":1716195670366,"stop":1716195678289,"duration":7923}},{"uid":"5ea8e37fa94b7265","reportUrl":"https://javister.github.io/javister-docker-base/1122//#testresult/5ea8e37fa94b7265","status":"passed","time":{"start":1715589477639,"stop":1715589485043,"duration":7404}},{"uid":"c0f5159d3b36a74a","reportUrl":"https://javister.github.io/javister-docker-base/1120//#testresult/c0f5159d3b36a74a","status":"passed","time":{"start":1715245165665,"stop":1715245173245,"duration":7580}},{"uid":"c75d0322b7f92c0d","reportUrl":"https://javister.github.io/javister-docker-base/1118//#testresult/c75d0322b7f92c0d","status":"passed","time":{"start":1714986320922,"stop":1714986328011,"duration":7089}},{"uid":"777a50838439ae7","reportUrl":"https://javister.github.io/javister-docker-base/1116//#testresult/777a50838439ae7","status":"passed","time":{"start":1714726979782,"stop":1714726987223,"duration":7441}},{"uid":"40dec24bd468def5","reportUrl":"https://javister.github.io/javister-docker-base/1113//#testresult/40dec24bd468def5","status":"passed","time":{"start":1714639829964,"stop":1714639837620,"duration":7656}},{"uid":"5be61bbeeee22908","reportUrl":"https://javister.github.io/javister-docker-base/1111//#testresult/5be61bbeeee22908","status":"passed","time":{"start":1714379439001,"stop":1714379446481,"duration":7480}},{"uid":"bad09986a11f7692","reportUrl":"https://javister.github.io/javister-docker-base/1110//#testresult/bad09986a11f7692","status":"passed","time":{"start":1714379139784,"stop":1714379147253,"duration":7469}},{"uid":"383869fdcfecb760","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/383869fdcfecb760","status":"passed","time":{"start":1713948304762,"stop":1713948312027,"duration":7265}},{"uid":"f96e2fa7215a2207","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/f96e2fa7215a2207","status":"passed","time":{"start":1713774269374,"stop":1713774276686,"duration":7312}},{"uid":"c471f29f613c9e49","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/c471f29f613c9e49","status":"passed","time":{"start":1713169361506,"stop":1713169369036,"duration":7530}},{"uid":"a096591fd9d795dc","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/a096591fd9d795dc","status":"passed","time":{"start":1713169023520,"stop":1713169030844,"duration":7324}},{"uid":"6fa9f1a4a989ee7a","reportUrl":"https://javister.github.io/javister-docker-base/1096//#testresult/6fa9f1a4a989ee7a","status":"passed","time":{"start":1712653634051,"stop":1712653641751,"duration":7700}},{"uid":"10a08b26925eef8a","reportUrl":"https://javister.github.io/javister-docker-base/1093//#testresult/10a08b26925eef8a","status":"passed","time":{"start":1712652799383,"stop":1712652806969,"duration":7586}}]},"tags":[]},"source":"5253b0a73241ac34.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@ce71c9e), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@51c608ba, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=b103a533ed01, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=be48f841-41c6-4dbd-ae1d-0f0fdefade76, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-06-20T08:22:18.175610338Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=959aab3c06bb6b9c8bfee10cd075d68577424585b8b174f5ddca73726cf60a08, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@2ed16bf7, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@4c64c1bb}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875/hostname, hostsPath=/var/lib/docker/containers/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875/hosts, logPath=/var/lib/docker/containers/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875-json.log, id=b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/strange_mccarthy, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=3cd920ab7c2308d19b806f48c2e34b84377ff620b9bdf36b4ac68b0690a0f4e2, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5c754952, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@3f0bd07c}, sandboxKey=/var/run/docker/netns/3cd920ab7c23, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={1b93bd91-e9df-4664-aa5d-ce57b9dad656=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-E7MdENqa, b103a533ed01], networkID=959aab3c06bb6b9c8bfee10cd075d68577424585b8b174f5ddca73726cf60a08, endpointId=b4bd8178255bf07154869b4d8ee02aa23e68fea19df4e7e43b9d668b617cafad, gateway=172.21.0.1, ipAddress=172.21.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:15:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/b103a533ed015e1e16ce85fb9a279f2664b3b5c581b732786e32158029eb6875/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=8087, exitCode=0, error=, startedAt=2024-06-20T08:22:18.422456001Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@1aa08ab9, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@70a3f94f)"]}