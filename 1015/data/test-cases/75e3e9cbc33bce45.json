{"uid":"75e3e9cbc33bce45","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [2] FIREFOX","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"489f578e8a5a0be5bbaabec9eeb68262","time":{"start":1702545306704,"stop":1702545322250,"duration":15546},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1702545270465,"stop":1702545270467,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"fe790046b4293135","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-FIREFOX-20231214-091520.flv","source":"fe790046b4293135.flv","type":"video/x-flv","size":36153}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az973-67"},{"name":"thread","value":"3789@fv-az973-67.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@10d23ef0), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@5a7b2205, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=c3fc2e55041e, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=d078eb45-416b-4ba9-83ea-d1d6e5d03b55, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-14T09:15:14.341297007Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=8c74a94bf215ff381ce969540d80d19c95f9b7ea3ad61d858a4c47d45ce81905, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@bb5e43e, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@13693d31}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7/hostname, hostsPath=/var/lib/docker/containers/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7/hosts, logPath=/var/lib/docker/containers/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7-json.log, id=c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/elegant_volhard, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=7a7227cef4f201548d4b38024181ae6a92de5be5e70cdf191fff7746923e2ce7, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@56354a1a, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@536900ff}, sandboxKey=/var/run/docker/netns/7a7227cef4f2, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={34e39db7-82c2-4be8-8eb8-44fe26a6ae0e=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-UyGYW1Dk, c3fc2e55041e], networkID=8c74a94bf215ff381ce969540d80d19c95f9b7ea3ad61d858a4c47d45ce81905, endpointId=419a5b9b25fda23be14c3014c241f1bfcd598704d82e226ad15a9dd62f95fa8b, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=6345, exitCode=0, error=, startedAt=2023-12-14T09:15:14.585770108Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@77598ab8, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@2d83a1d7)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":291,"unknown":0,"total":291},"items":[{"uid":"6255ed0be9925ee0","reportUrl":"https://javister.github.io/javister-docker-base/1013//#testresult/6255ed0be9925ee0","status":"passed","time":{"start":1702544939414,"stop":1702544946822,"duration":7408}},{"uid":"56f9a9a9331dc3be","reportUrl":"https://javister.github.io/javister-docker-base/1010//#testresult/56f9a9a9331dc3be","status":"passed","time":{"start":1702283167263,"stop":1702283174603,"duration":7340}},{"uid":"5833b3188acc7221","reportUrl":"https://javister.github.io/javister-docker-base/1008//#testresult/5833b3188acc7221","status":"passed","time":{"start":1702282658461,"stop":1702282665889,"duration":7428}},{"uid":"cffeee5c72ed99f8","reportUrl":"https://javister.github.io/javister-docker-base/1005//#testresult/cffeee5c72ed99f8","status":"passed","time":{"start":1701764296771,"stop":1701764304241,"duration":7470}},{"uid":"3f24ac304ffc8e8a","reportUrl":"https://javister.github.io/javister-docker-base/1003//#testresult/3f24ac304ffc8e8a","status":"passed","time":{"start":1701764227531,"stop":1701764235014,"duration":7483}},{"uid":"d27ecc04ebbef1fb","reportUrl":"https://javister.github.io/javister-docker-base/999//#testresult/d27ecc04ebbef1fb","status":"passed","time":{"start":1701335458741,"stop":1701335466263,"duration":7522}},{"uid":"84ffebd81a1c5457","reportUrl":"https://javister.github.io/javister-docker-base/995//#testresult/84ffebd81a1c5457","status":"passed","time":{"start":1701075915421,"stop":1701075922900,"duration":7479}},{"uid":"2ed7b7ec67eaa4b0","reportUrl":"https://javister.github.io/javister-docker-base/993//#testresult/2ed7b7ec67eaa4b0","status":"passed","time":{"start":1700643975163,"stop":1700643982763,"duration":7600}},{"uid":"459dc28583efbd3c","reportUrl":"https://javister.github.io/javister-docker-base/992//#testresult/459dc28583efbd3c","status":"passed","time":{"start":1700643618631,"stop":1700643626039,"duration":7408}},{"uid":"54e2d434dfb6d18a","reportUrl":"https://javister.github.io/javister-docker-base/989//#testresult/54e2d434dfb6d18a","status":"passed","time":{"start":1700124906704,"stop":1700124923268,"duration":16564}},{"uid":"b33aad4aeef8a7b8","reportUrl":"https://javister.github.io/javister-docker-base/988//#testresult/b33aad4aeef8a7b8","status":"passed","time":{"start":1700124667924,"stop":1700124683611,"duration":15687}},{"uid":"d17432a9321df33d","reportUrl":"https://javister.github.io/javister-docker-base/984//#testresult/d17432a9321df33d","status":"passed","time":{"start":1699348434955,"stop":1699348451193,"duration":16238}},{"uid":"efb7cf378cab741d","reportUrl":"https://javister.github.io/javister-docker-base/982//#testresult/efb7cf378cab741d","status":"passed","time":{"start":1699347902988,"stop":1699347919785,"duration":16797}},{"uid":"d16d20d7ca3ea216","reportUrl":"https://javister.github.io/javister-docker-base/979//#testresult/d16d20d7ca3ea216","status":"passed","time":{"start":1699259765831,"stop":1699259810493,"duration":44662}},{"uid":"a72791ff5dd8a6c4","reportUrl":"https://javister.github.io/javister-docker-base/977//#testresult/a72791ff5dd8a6c4","status":"passed","time":{"start":1698915348449,"stop":1698915360429,"duration":11980}},{"uid":"393bd7ebf4325907","reportUrl":"https://javister.github.io/javister-docker-base/975//#testresult/393bd7ebf4325907","status":"passed","time":{"start":1698138256107,"stop":1698138307052,"duration":50945}},{"uid":"d41b92503d8800a1","reportUrl":"https://javister.github.io/javister-docker-base/972//#testresult/d41b92503d8800a1","status":"passed","time":{"start":1698137459581,"stop":1698137511798,"duration":52217}},{"uid":"72725b880f31e8f9","reportUrl":"https://javister.github.io/javister-docker-base/973//#testresult/72725b880f31e8f9","status":"passed","time":{"start":1698137423697,"stop":1698137456902,"duration":33205}},{"uid":"949c433889a47e4a","reportUrl":"https://javister.github.io/javister-docker-base/967//#testresult/949c433889a47e4a","status":"passed","time":{"start":1697187753975,"stop":1697187765753,"duration":11778}},{"uid":"b4c1c04e03d5200f","reportUrl":"https://javister.github.io/javister-docker-base/966//#testresult/b4c1c04e03d5200f","status":"passed","time":{"start":1697187627207,"stop":1697187637340,"duration":10133}}]},"tags":[]},"source":"75e3e9cbc33bce45.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-firefox-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@10d23ef0), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@5a7b2205, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=c3fc2e55041e, image=selenium/standalone-firefox-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=d078eb45-416b-4ba9-83ea-d1d6e5d03b55, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-14T09:15:14.341297007Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=8c74a94bf215ff381ce969540d80d19c95f9b7ea3ad61d858a4c47d45ce81905, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@bb5e43e, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@13693d31}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7/hostname, hostsPath=/var/lib/docker/containers/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7/hosts, logPath=/var/lib/docker/containers/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7-json.log, id=c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7, sizeRootFs=null, sizeRw=null, imageId=sha256:3291adfd365e3909a673a6f4352515eb8c058e2e3f3e56d51e2fdcc6cdeac71a, mountLabel=, name=/elegant_volhard, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=7a7227cef4f201548d4b38024181ae6a92de5be5e70cdf191fff7746923e2ce7, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@56354a1a, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@536900ff}, sandboxKey=/var/run/docker/netns/7a7227cef4f2, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={34e39db7-82c2-4be8-8eb8-44fe26a6ae0e=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-UyGYW1Dk, c3fc2e55041e], networkID=8c74a94bf215ff381ce969540d80d19c95f9b7ea3ad61d858a4c47d45ce81905, endpointId=419a5b9b25fda23be14c3014c241f1bfcd598704d82e226ad15a9dd62f95fa8b, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/c3fc2e55041ebc69d86b92e2ad22241a4a3e0712bc8d1aa49c091789ba31d9b7/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=6345, exitCode=0, error=, startedAt=2023-12-14T09:15:14.585770108Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@77598ab8, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@2d83a1d7)"]}