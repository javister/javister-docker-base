{"uid":"207776e569f1a2d3","name":"testVideoRecordingTemplateSuccess(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess","historyId":"45d41414bea5a3bec1f4595dee878e2b","time":{"start":1719565294317,"stop":1719565299999,"duration":5682},"description":"Запись видео: удачный параметризированный тест","descriptionHtml":"<p>Запись видео: удачный параметризированный тест</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanBeforeAll","time":{"start":1719565294313,"stop":1719565294314,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Запись видео: удачный параметризированный тест","status":"passed","steps":[],"attachments":[{"uid":"bfe84c8c17454e50","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverVideoIT.testVideoRecordingTemplateSuccess-CHROME-20240628-090138.flv","source":"bfe84c8c17454e50.flv","type":"video/x-flv","size":23883}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverVideoIT]/[test-template:testVideoRecordingTemplateSuccess(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1756-901"},{"name":"thread","value":"3676@fv-az1756-901.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"testMethod","value":"testVideoRecordingTemplateSuccess"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverVideoIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@1d043856), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@3b488756, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=a587e93613f2, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=8b8e2458-17c8-4fc9-82a5-e2e777f5503f, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-06-28T09:01:34.326068661Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=5a94b28710af09fc1cd3aed8ef62b66cebb0cde26622765763fbf529dd592bce, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@6eab5cde, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@1622570a}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a/hostname, hostsPath=/var/lib/docker/containers/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a/hosts, logPath=/var/lib/docker/containers/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a-json.log, id=a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/silly_clarke, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=70451f02dcb1878fb37f33ba15be68089852229a814037c883d027c02fa25ea6, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@ac86a5a, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@34c81f7}, sandboxKey=/var/run/docker/netns/70451f02dcb1, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={e1deb323-ee08-4992-9e2c-5d3984667319=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-xPvu6kcs, a587e93613f2], networkID=5a94b28710af09fc1cd3aed8ef62b66cebb0cde26622765763fbf529dd592bce, endpointId=585eecfb25e905a92c200c795a9b9abfa9c70f61d680eb03cb656fed952e65cd, gateway=172.21.0.1, ipAddress=172.21.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:15:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=18650, exitCode=0, error=, startedAt=2024-06-28T09:01:34.563398026Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@37b570ec, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@33abeb17)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":345,"unknown":0,"total":345},"items":[{"uid":"9d44e721a55d0184","reportUrl":"https://javister.github.io/javister-docker-base/1150//#testresult/9d44e721a55d0184","status":"passed","time":{"start":1719219484253,"stop":1719219490033,"duration":5780}},{"uid":"78858b765a8447cd","reportUrl":"https://javister.github.io/javister-docker-base/1147//#testresult/78858b765a8447cd","status":"passed","time":{"start":1718871847971,"stop":1718871853592,"duration":5621}},{"uid":"70430f01cc3087f1","reportUrl":"https://javister.github.io/javister-docker-base/1144//#testresult/70430f01cc3087f1","status":"passed","time":{"start":1718613507002,"stop":1718613512746,"duration":5744}},{"uid":"5b05b3be220f4971","reportUrl":"https://javister.github.io/javister-docker-base/1142//#testresult/5b05b3be220f4971","status":"passed","time":{"start":1718612996528,"stop":1718613002211,"duration":5683}},{"uid":"aa02ebfe43a7688c","reportUrl":"https://javister.github.io/javister-docker-base/1139//#testresult/aa02ebfe43a7688c","status":"passed","time":{"start":1718269817158,"stop":1718269823018,"duration":5860}},{"uid":"dde253d293f7a1aa","reportUrl":"https://javister.github.io/javister-docker-base/1135//#testresult/dde253d293f7a1aa","status":"passed","time":{"start":1717489716328,"stop":1717489722023,"duration":5695}},{"uid":"fee502d44cba9f47","reportUrl":"https://javister.github.io/javister-docker-base/1132//#testresult/fee502d44cba9f47","status":"passed","time":{"start":1717405023525,"stop":1717405029188,"duration":5663}},{"uid":"3ee1f606b860defc","reportUrl":"https://javister.github.io/javister-docker-base/1129//#testresult/3ee1f606b860defc","status":"passed","time":{"start":1717059231242,"stop":1717059236883,"duration":5641}},{"uid":"de804b08842c5312","reportUrl":"https://javister.github.io/javister-docker-base/1125//#testresult/de804b08842c5312","status":"passed","time":{"start":1716195789115,"stop":1716195794775,"duration":5660}},{"uid":"ec3573c838a9e1a2","reportUrl":"https://javister.github.io/javister-docker-base/1122//#testresult/ec3573c838a9e1a2","status":"passed","time":{"start":1715589536818,"stop":1715589542597,"duration":5779}},{"uid":"f54c96dd3fd1fa3f","reportUrl":"https://javister.github.io/javister-docker-base/1120//#testresult/f54c96dd3fd1fa3f","status":"passed","time":{"start":1715245228061,"stop":1715245233944,"duration":5883}},{"uid":"89ad2f401dbff8a7","reportUrl":"https://javister.github.io/javister-docker-base/1118//#testresult/89ad2f401dbff8a7","status":"passed","time":{"start":1714986378654,"stop":1714986384245,"duration":5591}},{"uid":"a05ef15f6ca97e4e","reportUrl":"https://javister.github.io/javister-docker-base/1116//#testresult/a05ef15f6ca97e4e","status":"passed","time":{"start":1714727040005,"stop":1714727045723,"duration":5718}},{"uid":"f16682e7d51c32fd","reportUrl":"https://javister.github.io/javister-docker-base/1113//#testresult/f16682e7d51c32fd","status":"passed","time":{"start":1714639889985,"stop":1714639895701,"duration":5716}},{"uid":"b832193c168ab3c6","reportUrl":"https://javister.github.io/javister-docker-base/1111//#testresult/b832193c168ab3c6","status":"passed","time":{"start":1714379498896,"stop":1714379504570,"duration":5674}},{"uid":"52021374d985f08f","reportUrl":"https://javister.github.io/javister-docker-base/1110//#testresult/52021374d985f08f","status":"passed","time":{"start":1714379199448,"stop":1714379205148,"duration":5700}},{"uid":"f9680bf731d2fb91","reportUrl":"https://javister.github.io/javister-docker-base/1107//#testresult/f9680bf731d2fb91","status":"passed","time":{"start":1713948363900,"stop":1713948369609,"duration":5709}},{"uid":"39f7cf4c92c8e49a","reportUrl":"https://javister.github.io/javister-docker-base/1105//#testresult/39f7cf4c92c8e49a","status":"passed","time":{"start":1713774328601,"stop":1713774334323,"duration":5722}},{"uid":"b89ef59f8c4bf48a","reportUrl":"https://javister.github.io/javister-docker-base/1101//#testresult/b89ef59f8c4bf48a","status":"passed","time":{"start":1713169289678,"stop":1713169295492,"duration":5814}},{"uid":"602b13ff51094f6b","reportUrl":"https://javister.github.io/javister-docker-base/1100//#testresult/602b13ff51094f6b","status":"passed","time":{"start":1713168953191,"stop":1713168958871,"duration":5680}}]},"tags":[]},"source":"207776e569f1a2d3.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@1d043856), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@3b488756, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=a587e93613f2, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=8b8e2458-17c8-4fc9-82a5-e2e777f5503f, org.testcontainers.version=1.19.8}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2024-06-28T09:01:34.326068661Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=5a94b28710af09fc1cd3aed8ef62b66cebb0cde26622765763fbf529dd592bce, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@6eab5cde, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@1622570a}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a/hostname, hostsPath=/var/lib/docker/containers/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a/hosts, logPath=/var/lib/docker/containers/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a-json.log, id=a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/silly_clarke, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=70451f02dcb1878fb37f33ba15be68089852229a814037c883d027c02fa25ea6, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@ac86a5a, 4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@34c81f7}, sandboxKey=/var/run/docker/netns/70451f02dcb1, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={e1deb323-ee08-4992-9e2c-5d3984667319=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-xPvu6kcs, a587e93613f2], networkID=5a94b28710af09fc1cd3aed8ef62b66cebb0cde26622765763fbf529dd592bce, endpointId=585eecfb25e905a92c200c795a9b9abfa9c70f61d680eb03cb656fed952e65cd, gateway=172.21.0.1, ipAddress=172.21.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:15:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/a587e93613f28d65fe88147905bb4a7f4e20a5fa220f9b77cbc594d95993087a/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=18650, exitCode=0, error=, startedAt=2024-06-28T09:01:34.563398026Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@37b570ec, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@33abeb17)"]}