{"uid":"3dae17e6886b1a45","name":"testCustomWebDriverContainerAutostart(JavisterWebDriverContainer) [1] CHROME","fullName":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart","historyId":"8f2a1194bf23ab0a20a1c8cd2c0c3515","time":{"start":1703494520801,"stop":1703494526537,"duration":5736},"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","descriptionHtml":"<p>WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"WebDriverMethodConfigurator: запуск контейнера с автостартом и инжекция как JavisterWebDriverContainer","status":"passed","steps":[],"attachments":[{"uid":"a15046ea589a6e67","name":"PASSED-com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT.testCustomWebDriverContainerAutostart-CHROME-20231225-085525.flv","source":"a15046ea589a6e67.flv","type":"video/x-flv","size":22827}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT]/[test-template:testCustomWebDriverContainerAutostart(com.github.javister.docker.testing.selenium.JavisterWebDriverContainer)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1052-424"},{"name":"thread","value":"3578@fv-az1052-424.ForkJoinPool-1-worker-1(13)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testClass","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"testMethod","value":"testCustomWebDriverContainerAutostart"},{"name":"suite","value":"com.github.javister.docker.testing.base.JavisterWebDriverMethodConfiguratorIT"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@6ac1d12d), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@13ae26fa, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=011a4b4d78b2, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=d3d5d2b6-fb88-450c-93ef-a307dfd08e07, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-25T08:55:20.80950519Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=3b57a0bb1daef7e0177899d81c3c977dc6d83a3c0a632da69d9f7763445c99e9, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@1813c2e0, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5029e5a8}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904/hostname, hostsPath=/var/lib/docker/containers/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904/hosts, logPath=/var/lib/docker/containers/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904-json.log, id=011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/goofy_brown, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=28dbbe96c483f0195be33c54772013d754c59a270c97c44dde7c7e8f5b0d77ae, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@49363f, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@699a4339}, sandboxKey=/var/run/docker/netns/28dbbe96c483, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={71b60f7c-dba5-4ded-aaec-19b2f5d9794d=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-hNkoiC2s, 011a4b4d78b2], networkID=3b57a0bb1daef7e0177899d81c3c977dc6d83a3c0a632da69d9f7763445c99e9, endpointId=392ca252edf0764d5cc2e09067ba1c4651d0b7d5aaa3cd8b98a090190adf3035, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16273, exitCode=0, error=, startedAt=2023-12-25T08:55:21.055147814Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@6f989828, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@708324d6)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":298,"unknown":0,"total":298},"items":[{"uid":"e19695aca822d8bb","reportUrl":"https://javister.github.io/javister-docker-base/1031//#testresult/e19695aca822d8bb","status":"passed","time":{"start":1703494231671,"stop":1703494237242,"duration":5571}},{"uid":"4f6d402491c7a5d1","reportUrl":"https://javister.github.io/javister-docker-base/1027//#testresult/4f6d402491c7a5d1","status":"passed","time":{"start":1702976737239,"stop":1702976742831,"duration":5592}},{"uid":"79c3b86939f1596","reportUrl":"https://javister.github.io/javister-docker-base/1028//#testresult/79c3b86939f1596","status":"passed","time":{"start":1702976647134,"stop":1702976652717,"duration":5583}},{"uid":"29364f7fe6280fd2","reportUrl":"https://javister.github.io/javister-docker-base/1023//#testresult/29364f7fe6280fd2","status":"passed","time":{"start":1702889191405,"stop":1702889197023,"duration":5618}},{"uid":"b0ab226931c8d3f9","reportUrl":"https://javister.github.io/javister-docker-base/1022//#testresult/b0ab226931c8d3f9","status":"passed","time":{"start":1702889143511,"stop":1702889149223,"duration":5712}},{"uid":"4b58050fe649b8a4","reportUrl":"https://javister.github.io/javister-docker-base/1019//#testresult/4b58050fe649b8a4","status":"passed","time":{"start":1702628791869,"stop":1702628797577,"duration":5708}},{"uid":"8871dbea1966114a","reportUrl":"https://javister.github.io/javister-docker-base/1015//#testresult/8871dbea1966114a","status":"passed","time":{"start":1702545413640,"stop":1702545419595,"duration":5955}},{"uid":"3b45618ee9d0cade","reportUrl":"https://javister.github.io/javister-docker-base/1013//#testresult/3b45618ee9d0cade","status":"passed","time":{"start":1702544830024,"stop":1702544836123,"duration":6099}},{"uid":"3cc6f96b942345e1","reportUrl":"https://javister.github.io/javister-docker-base/1010//#testresult/3cc6f96b942345e1","status":"passed","time":{"start":1702283057872,"stop":1702283064142,"duration":6270}},{"uid":"874426241bf0c3c9","reportUrl":"https://javister.github.io/javister-docker-base/1008//#testresult/874426241bf0c3c9","status":"passed","time":{"start":1702282549198,"stop":1702282555289,"duration":6091}},{"uid":"329611a053e16800","reportUrl":"https://javister.github.io/javister-docker-base/1005//#testresult/329611a053e16800","status":"passed","time":{"start":1701764209827,"stop":1701764215636,"duration":5809}},{"uid":"e40b61270794a22b","reportUrl":"https://javister.github.io/javister-docker-base/1003//#testresult/e40b61270794a22b","status":"passed","time":{"start":1701764141122,"stop":1701764146934,"duration":5812}},{"uid":"bba5ad7cc83434fb","reportUrl":"https://javister.github.io/javister-docker-base/999//#testresult/bba5ad7cc83434fb","status":"passed","time":{"start":1701335372220,"stop":1701335378106,"duration":5886}},{"uid":"ff67a7a0b4690ce3","reportUrl":"https://javister.github.io/javister-docker-base/995//#testresult/ff67a7a0b4690ce3","status":"passed","time":{"start":1701075828341,"stop":1701075834277,"duration":5936}},{"uid":"1afca0258ca3acb8","reportUrl":"https://javister.github.io/javister-docker-base/993//#testresult/1afca0258ca3acb8","status":"passed","time":{"start":1700643886811,"stop":1700643892704,"duration":5893}},{"uid":"8da15a873841f4e8","reportUrl":"https://javister.github.io/javister-docker-base/992//#testresult/8da15a873841f4e8","status":"passed","time":{"start":1700643532211,"stop":1700643538085,"duration":5874}},{"uid":"1f78f5835d09083","reportUrl":"https://javister.github.io/javister-docker-base/989//#testresult/1f78f5835d09083","status":"passed","time":{"start":1700125029066,"stop":1700125034933,"duration":5867}},{"uid":"84c94b7443edf59b","reportUrl":"https://javister.github.io/javister-docker-base/988//#testresult/84c94b7443edf59b","status":"passed","time":{"start":1700124789104,"stop":1700124795079,"duration":5975}},{"uid":"77557cc6bfd3ce5d","reportUrl":"https://javister.github.io/javister-docker-base/984//#testresult/77557cc6bfd3ce5d","status":"passed","time":{"start":1699348558760,"stop":1699348564633,"duration":5873}},{"uid":"3efb1741f7c22937","reportUrl":"https://javister.github.io/javister-docker-base/982//#testresult/3efb1741f7c22937","status":"passed","time":{"start":1699348024503,"stop":1699348030414,"duration":5911}}]},"tags":[]},"source":"3dae17e6886b1a45.json","parameterValues":["GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=selenium/standalone-chrome-debug:3.141.59, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@6ac1d12d), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@13ae26fa, startupAttempts=3, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904, containerInfo=InspectContainerResponse(args=[], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[/opt/bin/entry_point.sh], domainName=, entrypoint=null, env=[no_proxy=localhost, TZ=Etc/UTC, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, DEBIAN_FRONTEND=noninteractive, DEBCONF_NONINTERACTIVE_SEEN=true, HOME=/home/seluser, LANG_WHICH=en, LANG_WHERE=US, ENCODING=UTF-8, LANGUAGE=en_US.UTF-8, LANG=en_US.UTF-8, SCREEN_WIDTH=1360, SCREEN_HEIGHT=1020, SCREEN_DEPTH=24, SCREEN_DPI=96, DISPLAY=:99.0, START_XVFB=true, NODE_MAX_INSTANCES=1, NODE_MAX_SESSION=1, NODE_HOST=0.0.0.0, NODE_PORT=5555, NODE_REGISTER_CYCLE=5000, NODE_POLLING=5000, NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000, NODE_DOWN_POLLING_LIMIT=2, NODE_APPLICATION_NAME=, NODE_CUSTOM={}, GRID_DEBUG=false, DBUS_SESSION_BUS_ADDRESS=/dev/null], exposedPorts=[4444/tcp, 5900/tcp], hostName=011a4b4d78b2, image=selenium/standalone-chrome-debug:3.141.59, labels={authors=SeleniumHQ, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=d3d5d2b6-fb88-450c-93ef-a307dfd08e07, org.testcontainers.version=1.19.3}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1200, volumes=null, workingDir=, healthCheck=null), created=2023-12-25T08:55:20.80950519Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/dev/shm:/dev/shm:rw], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=3b57a0bb1daef7e0177899d81c3c977dc6d83a3c0a632da69d9f7763445c99e9, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@1813c2e0, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5029e5a8}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904/hostname, hostsPath=/var/lib/docker/containers/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904/hosts, logPath=/var/lib/docker/containers/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904-json.log, id=011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904, sizeRootFs=null, sizeRw=null, imageId=sha256:aaf43463c5728a2287a99f1a85aaf95c855f9e32945419881e495888c00a0b31, mountLabel=, name=/goofy_brown, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=28dbbe96c483f0195be33c54772013d754c59a270c97c44dde7c7e8f5b0d77ae, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={4444/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@49363f, 5900/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@699a4339}, sandboxKey=/var/run/docker/netns/28dbbe96c483, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={71b60f7c-dba5-4ded-aaec-19b2f5d9794d=ContainerNetwork(ipamConfig=null, links=[], aliases=[tc-hNkoiC2s, 011a4b4d78b2], networkID=3b57a0bb1daef7e0177899d81c3c977dc6d83a3c0a632da69d9f7763445c99e9, endpointId=392ca252edf0764d5cc2e09067ba1c4651d0b7d5aaa3cd8b98a090190adf3035, gateway=172.20.0.1, ipAddress=172.20.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:14:00:03)}), path=/opt/bin/entry_point.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/011a4b4d78b2ec035c8616243b1f97efbcfdd22d3b2340ccba782dceed9b8904/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=16273, exitCode=0, error=, startedAt=2023-12-25T08:55:21.055147814Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/dev/shm, destination=/dev/shm, driver=null, mode=rw, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.WaitAllStrategy@6f989828, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@708324d6)"]}